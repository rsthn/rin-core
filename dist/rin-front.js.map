{"version":3,"sources":["node_modules/@rsthn/rin/alpha.js","node_modules/@rsthn/rin/class.js","node_modules/@rsthn/rin/event.js","node_modules/@rsthn/rin/event-dispatcher.js","node_modules/@rsthn/rin/model-regex.js","node_modules/@rsthn/rin/model-constraints.js","node_modules/@rsthn/rin/model.js","node_modules/@rsthn/rin/model-list.js","node_modules/@rsthn/rin/schema.js","node_modules/@rsthn/rin/flattenable.js","node_modules/@rsthn/rin/collection.js","node_modules/@rsthn/rin/template.js","node_modules/@rsthn/rin/main.js","router.js","element.js","node_modules/base-64/base64.js","node_modules/node-fetch/browser.js","api.js","elems/r-tabs.js","elems/r-form.js","elems/r-panel.js","elements.js","main.js"],"names":["EventDispatcher","require","_Router","module","exports","Route","extend","routeRegex","value","params","s_args","active","changed","__ctor","route","_super","_compileRoute","m","exec","replace","push","addHandler","handler","unrouted","addEventListener","removeHandler","removeEventListener","dispatch","matches","match","dispatchEvent","args","str","i","length","routes","sortedRoutes","ignoreHashChangeEvent","location","init","alreadyAttached","globalThis","onhashchange","onLocationChanged","bind","refresh","setRoute","silent","realLocation","hash","addRoute","onRoute","onUnroute","sort","a","b","undefined","addRoutes","removeRoute","removeRoutes","cLocation","pLocation","state","k","j","rLocation","substr","indexOf","lastIndexOf","trim","split","navigate","Rin","Model","Template","elementPrototypes","elementClasses","Element","eid","isRoot","isReady","refs","modelt","model","events","evt","source","dataset","action","continuePropagation","enter","_list_watch","_list_visible","_list_property","style","display","Math","random","toString","tmp","setModel","_mutationObserver","Object","keys","reverse","forEach","bindEvents","ready","ref","global","shift","collectWatchers","root","findCustomParent","_mutationHandler","timeout","childNodes","querySelectorAll","findRoot","parentElement","connectReference","is_ready","clearTimeout","setTimeout","elem","_linked","onRefAdded","disconnect","MutationObserver","observe","attributes","childList","subtree","getRoot","update","ensureTypeOf","onModelPreChanged","onModelPropertyChanging","onModelPropertyPreChanged","onModelPropertyRemoved","setNamespace","getModel","addClass","classString","classList","add","removeClass","remove","setStyle","styleString","name","toUpperCase","getWidth","getBoundingClientRect","width","getHeight","height","evtstr","hdl","typeOf","selector","listen","keyCode","_eventHandler","target","HTMLElement","call","detail","elems","preventDefault","stopPropagation","eventName","eventCatcher","callback0","callback1","self","firstCapture","firstCaptureCount","queue","q","pop","removed","bubbles","CustomEvent","dispatchOn","setInnerHTML","innerHTML","list","modified","_list_watch_length","_list_visible_length","_list_property_length","_template","compile","_watch","RegExp","watch","removeAttribute","selfWatch","_visible","visible","selfVisible","onchange","onblur","type","set","checked","getValue","tagName","onmouseup","property","selfProperty","filter","onCreated","onConnected","onDisconnected","onRefRemoved","data","get","fields","test","onModelChanged","trigger","setValue","onModelPropertyChanged","preparePrototype","proto","__prototypePrepared","startsWith","register","protos","newElement","constructor","invokeConstructor","entries","prototype","srcElement","_custom","flags","_pending","connectedCallback","xref","disconnectedCallback","override","clone","f","customElements","define","expand","getGlobal","window","Error","fetch","default","Headers","Request","Response","base64","apiUrl","useReq64","retries","_requestLevel","_requestPackage","_packageData","responseFilter","res","req","packageBegin","packageEnd","packageSend","rpkg","encode","encodeParams","_showProgress","post","response","e","document","documentElement","_hideProgress","obj","s","FormData","encodeURIComponent","join","apiCall","success","failure","url","Date","now","options","credentials","headers","method","body","multipart","append","File","Blob","l","then","result","json","catch","err","Promise","resolve","reject","Router","baseRoute","selectTab","className","_routeHandler","_showTab","tabName","container","querySelector","nextElementSibling","_hideTabsExcept","exceptName","children","contains","el","links","Api","def","field","val","defaults","reset","_clearMarkers","filterString","r","_change","createEvent","initEvent","fireEvent","_setField","toLowerCase","multiple","parseInt","FileList","_getField","files","_fieldChanged","_onSuccess","message","_onFailure","createElement","insertBefore","error","nsilent","submit","strict","formAction","_onActivate","show","_onDeactivate","hide","noHashChange","Tabs","Form","Panel","Elements"],"mappings":"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","file":"rin-front.js","sourceRoot":"..","sourcesContent":["/*\r\n**\trin/alpha\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = module.exports = { };\r\n\r\n/**\r\n**\tInvokes the specified function 'fn' 10ms later.\r\n**\r\n**\t>> void invokeLater (function fn);\r\n*/\r\nRin.invokeLater = function (fn)\r\n{\r\n\tif (fn) setTimeout (function() { fn(); }, 10);\r\n};\r\n\r\n\r\n/**\r\n**\tWaits for the specified amount of milliseconds. Returns a Promise.\r\n**\r\n**\t>> Promise wait (int millis);\r\n*/\r\nRin.wait = function (millis)\r\n{\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tsetTimeout (resolve, millis);\r\n\t});\r\n};\r\n\r\n\r\n/**\r\n**\tReturns the type of an element 'o', properly detects arrays and null types. The return string is always in lowercase.\r\n**\r\n**\t>> string typeOf (any o);\r\n*/\r\nRin.typeOf = function (o)\r\n{\r\n\tif (o instanceof Array)\r\n\t\treturn \"array\";\r\n\r\n\tif (o === null)\r\n\t\treturn \"null\";\r\n\r\n\treturn (typeof(o)).toString().toLowerCase();\r\n};\r\n\r\n\r\n/**\r\n**\tReturns boolean indicating if the type of the element is an array or an object.\r\n**\r\n**\t>> bool isArrayOrObject (any o);\r\n*/\r\nRin.isArrayOrObject = function (o)\r\n{\r\n\tswitch (Rin.typeOf(o))\r\n\t{\r\n\t\tcase \"array\": case \"object\":\r\n\t\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\n\r\n/**\r\n**\tCreates a clone (deep copy) of the specified element. The element can be an array, an object or a primitive type.\r\n**\r\n**\t>> T clone (T elem);\r\n*/\r\nRin.clone = function (elem)\r\n{\r\n\tvar o;\r\n\r\n\tif (Rin.typeOf(elem) == \"array\")\r\n\t{\r\n\t\to = [ ];\r\n\r\n\t\tfor (let i = 0; i < elem.length; i++)\r\n\t\t\to.push (Rin.clone(elem[i]));\r\n\t}\r\n\telse if (Rin.typeOf(elem) == \"object\")\r\n\t{\r\n\t\to = { };\r\n\r\n\t\tfor (let i in elem)\r\n\t\t\to[i] = Rin.clone(elem[i]);\r\n\t}\r\n\telse\r\n\t{\r\n\t\to = elem;\r\n\t}\r\n\r\n\treturn o;\r\n};\r\n\r\n\r\n/**\r\n**\tMerges all given elements into the first one, object fields are cloned.\r\n**\r\n**\t>> T merge (T... elems)\r\n*/\r\nRin.merge = function (output, ...objs)\r\n{\r\n\tif (Rin.typeOf(output) == \"array\")\r\n\t{\r\n\t\tfor (let i = 0; i < objs.length; i++)\r\n\t\t{\r\n\t\t\tlet arr = objs[i];\r\n\r\n\t\t\tif (Rin.typeOf(arr) != \"array\")\r\n\t\t\t{\r\n\t\t\t\toutput.push(arr);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor (let j = 0; j < arr.length; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\toutput.push(Rin.clone(arr[j]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (Rin.typeOf(output) == \"object\")\r\n\t{\r\n\t\tfor (let i = 0; i < objs.length; i++)\r\n\t\t{\r\n\t\t\tlet obj = objs[i];\r\n\t\t\tif (Rin.typeOf(obj) != \"object\") continue;\r\n\r\n\t\t\tfor (let field in obj)\r\n\t\t\t{\r\n\t\t\t\tif (Rin.isArrayOrObject(obj[field]))\r\n\t\t\t\t{\r\n\t\t\t\t\tif (field in output)\r\n\t\t\t\t\t\tRin.merge(output[field], obj[field]);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\toutput[field] = Rin.clone(obj[field]);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\toutput[field] = obj[field];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn output;\r\n};\r\n\r\n\r\n/**\r\n**\tAssigns all fields from the specified objects into the first one.\r\n**\r\n**\t>> object override (object output, object... objs)\r\n*/\r\nRin.override = function (output, ...objs)\r\n{\r\n\tfor (let i = 0; i < objs.length; i++)\r\n\t{\r\n\t\tfor (let j in objs[i])\r\n\t\t{\r\n\t\t\toutput[j] = objs[i][j];\r\n\t\t}\r\n\t}\r\n\r\n\treturn output;\r\n};\r\n\r\n\r\n/*\r\n**\tCompares two objects and returns `true` if all properties in \"partial\" find a match in \"full\".\r\n*/\r\nRin.partialCompare = function (full, partial)\r\n{\r\n\tif (full == null || partial == null) return false;\r\n\r\n\tif (full === partial)\r\n\t\treturn true;\r\n\r\n\tfor (var i in partial)\r\n\t{\r\n\t\tif (full[i] != partial[i])\r\n\t\t\treturn false;\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n/*\r\n**\tPerforms a partial search for an object (o) in the specified array and returns its index or `false` if the\r\n**\tobject was not found. When `getObject` is set to `true` the object will be returned instead of an index, or\r\n**\t`null` if not found.\r\n*/\r\nRin.arrayFind = function (arr, o, getObject)\r\n{\r\n\tfor (var i = 0; arr && i < arr.length; i++)\r\n\t{\r\n\t\tif (this.partialCompare (arr[i], o))\r\n\t\t\treturn getObject ? arr[i] : i;\r\n\t}\r\n\r\n\treturn getObject ? null : false;\r\n};\r\n\r\n\r\n/*\r\n**\tTraverses the given object attempting to find the index/key that does an identical match with the specified value,\r\n**\tif not found returns -1, otherwise the index/key where the value was found.\r\n**\r\n**\t>> int indexOf (array container, T value)\r\n**\t>> string indexOf (object container, T value)\r\n*/\r\nRin.indexOf = function (container, value, forceArray=false)\r\n{\r\n\tif (forceArray)\r\n\t{\r\n\t\tfor (let i = 0; i < container.length; i++)\r\n\t\t{\r\n\t\t\tif (container[i] === value)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\t\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tfor (let i in container)\r\n\t{\r\n\t\tif (container[i] === value)\r\n\t\t\treturn i;\r\n\t}\r\n\r\n\treturn -1;\r\n};\r\n\r\n\r\n/**\r\n**\tEscapes a string using HTML entities.\r\n**\r\n**\t>> string escape (string str);\r\n*/\r\nRin.escape = function (str)\r\n{\r\n\treturn (str+\"\").replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n};\r\n\r\n\r\n/**\r\n**\tVerifies if the specified object is of class `m`, if not it will create a new instance of `m` passing `o` as parameter.\r\n**\r\n**\t>> object ensureTypeOf (class m, object o);\r\n*/\r\nRin.ensureTypeOf = function (m, o)\r\n{\r\n\tif (!o || !m || o instanceof m)\r\n\t\treturn o;\r\n\r\n\tif (o.isInstanceOf && m.prototype.className)\r\n\t{\r\n\t\tif (o.isInstanceOf (m.prototype.className))\r\n\t\t\treturn o;\r\n\t}\r\n\r\n\treturn new m (o);\r\n};\r\n\r\n\r\n/**\r\n**\tSerializes an object and returns its JSON string representation.\r\n**\r\n**\t>> string serialize (object o);\r\n*/\r\nRin.serialize = function (o)\r\n{\r\n\treturn JSON.stringify(o);\r\n};\r\n\r\n\r\n/**\r\n**\tDeserializes a string in JSON format and returns the result.\r\n**\r\n**\t>> any deserialize (string s);\r\n*/\r\nRin.deserialize = function (s)\r\n{\r\n\treturn JSON.parse(s);\r\n};\r\n","/*\r\n**\trin/class\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = require('./alpha');\r\n\r\n/**\r\n**\tBase class used to easily create classes and sub-classes with complex multiple inheritance and\r\n**\tsupport for calls to parent class methods.\r\n*/\r\n\r\nlet Class = module.exports = function ()\r\n{\r\n};\r\n\r\n\r\n/**\r\n**\tReference to the class itself.\r\n*/\r\nClass._class = Class;\r\n\r\n\r\n/**\r\n**\tContains the methods of each of the super classes.\r\n*/\r\nClass._super = { };\r\n\r\n\r\n/**\r\n**\tName of the class, if none specified the class will be considered \"final\" and will not be inheritable.\r\n*/\r\nClass.prototype.className = \"Class\";\r\n\r\n\r\n/**\r\n**\tClass constructor, should initialize the state of the instance. Invoked when the `new` keyword is used with the class.\r\n*/\r\nClass.prototype.__ctor = function ()\r\n{\r\n};\r\n\r\n\r\n/**\r\n**\tClass destructor, should clear the instance state and release any used resources, invoked when the global `dispose`\r\n**\tfunction is called with the instance as parameter.\r\n*/\r\nClass.prototype.__dtor = function ()\r\n{\r\n};\r\n\r\n\r\n/**\r\n**\tReturns true if the object is an instance of the specified class (verifies inheritance), the parameter can be a class\r\n**\tname, a class constructor or a class instance, in any case the appropriate checks will be done.\r\n**\r\n**\t>> bool isInstanceOf (string className);\r\n**\t>> bool isInstanceOf (constructor classConstructor);\r\n**\t>> bool isInstanceOf (object classInstance);\r\n*/\r\nClass.prototype.isInstanceOf = function (className)\r\n{\r\n\tclassName = Rin.typeOf(className) == \"string\" ? className : (className.prototype ? className.prototype.className : className.constructor.prototype.className);\r\n\treturn className in this._super ? true : this.className == className;\r\n};\r\n\r\n\r\n/**\r\n**\tInternal method to ensure the _super field of an instance is ready to be used.\r\n**\r\n**\t>> void _initSuperRefs ();\r\n*/\r\nClass.prototype._initSuperRefs = function ()\r\n{\r\n\tvar _super = this.constructor._super;\r\n\tvar _newSuper = { };\r\n\r\n\tfor (let i in _super)\r\n\t{\r\n\t\tlet o = { };\r\n\r\n\t\tlet _prot = _super[i].prototype;\r\n\t\tfor (let j in _prot)\r\n\t\t{\r\n\t\t\tif (Rin.typeOf(_prot[j]) == \"function\")\r\n\t\t\t\to[j] = _prot[j].bind(this);\r\n\t\t}\r\n\r\n\t\t_newSuper[i] = o;\r\n\t}\r\n\r\n\tthis._super = _newSuper;\r\n};\r\n\r\n\r\n/**\r\n**\tExtends the class with the specified prototype. The prototype can be a function (class constructor) or an object. Note that the\r\n**\tclass will be modified (and returned) instead of creating a new class. Must be called at the class-level (**not** instance level).\r\n**\tWhen a class is provided all fields starting with uppercase at the class-level will not be inherited, this is used to create constants\r\n**\ton classes without having them to be copied to derived classes.\r\n**\r\n**\t>> class inherit (constructor classConstructor);\r\n**\t>> class inherit (object obj);\r\n*/\r\nClass.inherit = function (proto)\r\n{\r\n\tvar self = this._class;\r\n\r\n\tvar _super = self._super;\r\n\tvar _class = self._class;\r\n\r\n\tif (Rin.typeOf(proto) == \"function\")\r\n\t{\r\n\t\t// Move constants (uppercased properties) to the class-level instead of prototype-level.\r\n\t\tfor (let i in proto._class)\r\n\t\t\tif (!/^[A-Z]/.test(i)) self[i] = proto._class[i];\r\n\r\n\t\t// Combine methods and properties.\r\n\t\tRin.override (self.prototype, proto._class.prototype);\r\n\r\n\t\t// Combine super methods.\r\n\t\tRin.override (_super, proto._class._super);\r\n\r\n\t\t// Add new super reference if className specified in inherited prototypes.\r\n\t\tif (proto._class.prototype.className)\r\n\t\t\t_super[proto._class.prototype.className] = proto._class;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tRin.override (self.prototype, proto);\r\n\t}\r\n\r\n\tself._super = _super;\r\n\tself._class = _class;\r\n\r\n\treturn self;\r\n};\r\n\r\n\r\n/**\r\n**\tInternal method used to extend a class with one or more prototypes.\r\n**\r\n**\t>> class _extend (object base, object[] protos);\r\n*/\r\nClass.prototype._extend = function (base, protos)\r\n{\r\n\tvar _class = function (...args)\r\n\t{\r\n\t\tthis._initSuperRefs();\r\n\t\tthis.__ctor.apply(this, args);\r\n\t};\r\n\r\n\t_class._class = _class;\r\n\t_class._super = { };\r\n\r\n\tClass.inherit.call (_class, base);\r\n\r\n\tdelete _class.prototype.className;\r\n\r\n\tfor (let i = 0; i < protos.length; i++)\r\n\t\t_class.inherit (protos[i]);\r\n\r\n\tdelete _class._super.Class;\r\n\r\n\tif (\"classInit\" in _class.prototype)\r\n\t\t_class.prototype.classInit();\r\n\r\n\treturn _class;\r\n};\r\n\r\n\r\n/**\r\n**\tCreates a new class with the specified prototypes each of which can be a class constructor or an object.\r\n**\r\n**\t>> constructor extend (object... protos);\r\n*/\r\nClass.extend = function (...protos)\r\n{\r\n\treturn this._class.prototype._extend (this, protos);\r\n};\r\n\r\n\r\n/**\r\n**\tCreates a new instance of a class resulting from extending the self class with the specified prototype.\r\n**\r\n**\t>> object create (object proto);\r\n*/\r\nClass.create = function (proto)\r\n{\r\n\treturn new (this.extend(proto)) ();\r\n};\r\n","/*\r\n**\trin/event\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = require('./alpha');\r\nlet Class = require('./class');\r\n\r\n/**\r\n**\tHolds the information about a triggered event. It also provides a mechanism to allow asynchronous\r\n**\tevent propagation to ensure the event chain order.\r\n*/\r\n\r\nmodule.exports = Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Event\",\r\n\r\n\t/**\r\n\t**\tSource of the event.\r\n\t*/\r\n\tsource: null,\r\n\r\n\t/**\r\n\t**\tName of the event.\r\n\t*/\r\n\tname: null,\r\n\r\n\t/**\r\n\t**\tArguments of the event.\r\n\t*/\r\n\targs: null,\r\n\r\n\t/**\r\n\t**\tIndicates if the last event handler wants to use async mode.\r\n\t*/\r\n\t_async: false,\r\n\r\n\t/**\r\n\t**\tQueue of all handlers to invoke.\r\n\t*/\r\n\tlist: null,\r\n\r\n\t/**\r\n\t**\tNext event to be executed in the event chain.\r\n\t*/\r\n\tnext: null,\r\n\r\n\t/**\r\n\t**\tReturn values from event handlers.\r\n\t*/\r\n\tret: null,\r\n\r\n\t/**\r\n\t**\tOriginal root event.\r\n\t*/\r\n\toriginal: null,\r\n\r\n\t/**\r\n\t**\tIndex of the current event handler.\r\n\t*/\r\n\ti: -1,\r\n\r\n\t/**\r\n\t**\tContructs an event object with the specified parameters. Source is the event-dispatcher object, list is\r\n\t**\tan array with all the listeners to invoke. The eventName and eventArgs are the event information to be\r\n\t**\tpassed to each handler and if a callback is specified (cbHandler+cbContext) it will be executed once all\r\n\t**\tthe event handlers have been processed.\r\n\t**\r\n\t**\tEvent __ctor (source: EventDispatcher, list: Array, eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t*/\r\n\t__ctor: function (source, list, eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\tthis.source = source;\r\n\r\n\t\tthis.name = eventName;\r\n\t\tthis.args = eventArgs;\r\n\r\n\t\tthis.cbHandler = cbHandler;\r\n\t\tthis.cbContext = cbContext;\r\n\r\n\t\tthis.list = list;\r\n\t\tthis.reset();\r\n\t},\r\n\r\n\t/**\r\n\t**\tResets the event to its initial state. An event object can be reused by resetting it and then\r\n\t**\tinvoking the resume event.\r\n\t**\r\n\t**\tEvent reset ();\r\n\t*/\r\n\treset: function ()\r\n\t{\r\n\t\tthis.next = null;\r\n\t\tthis.ret = [];\r\n\r\n\t\tthis._async = false;\r\n\t\tthis.i = -1;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the internal asynchronous flag. Should be called before a handler returns. If a handler\r\n\t**\tcalls this method it should also call resume() when async operations are finished.\r\n\t**\r\n\t**\tEvent wait ();\r\n\t*/\r\n\twait: function ()\r\n\t{\r\n\t\tthis._async = true;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tResumes event propagation. Should be called manually by event handlers that also call wait().\r\n\t**\r\n\t**\tEvent resume ();\r\n\t*/\r\n\tresume: function ()\r\n\t{\r\n\t\tthis._async = false;\r\n\r\n\t\twhile (!this._async)\r\n\t\t{\r\n\t\t\tif (++this.i >= this.list.length)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tif (this.list[this.i].silent)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (Rin.typeOf(this.list[this.i].handler) == \"string\")\r\n\t\t\t{\r\n\t\t\t\tif (this.list[this.i].context)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!this.list[this.i].context[this.list[this.i].handler])\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tif (this.list[this.i].context[this.list[this.i].handler] (this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (global[this.list[this.i].handler].call (null, this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (this.list[this.i].handler.call (this.list[this.i].context, this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._async)\r\n\t\t\treturn this;\r\n\r\n\t\tif (this.i >= this.list.length && this.next) this.next.resume();\r\n\r\n\t\tif (this.cbHandler)\r\n\t\t\tthis.cbHandler.call (this.cbContext);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the \"original\" property of the event to indicate where the original event comes from.\r\n\t**\r\n\t**\tEvent from (event: Event);\r\n\t*/\r\n\tfrom: function (event)\r\n\t{\r\n\t\tthis.original = event;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tEnqueues the specified event to be executed upon the current event process is finished. The \"original\"\r\n\t**\tproperty of the chained event will be set to the current event.\r\n\t**\r\n\t**\tEvent enqueueEvent (event: Event);\r\n\t*/\r\n\tenqueue: function (event)\r\n\t{\r\n\t\tif (!event) return this;\r\n\r\n\t\tvar evt;\r\n\t\tfor (evt = this; evt.next != null; evt = evt.next);\r\n\r\n\t\tevt.next = event;\r\n\t\tevent.from (this);\r\n\r\n\t\treturn this;\r\n\t}\r\n});\r\n","/*\r\n**\trin/event-dispatcher\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Class = require('./class');\r\nlet Event = require('./event');\r\n\r\n/**\r\n**\tEvent dispatcher allows several event listeners to be attached, these will be invoked whenever the\r\n**\tevent that is being listened to is triggered.\r\n*/\r\n\r\nmodule.exports = Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"EventDispatcher\",\r\n\r\n\t/**\r\n\t**\tListeners attached to this event dispatcher. Grouped by event name.\r\n\t*/\r\n\tlisteners: null,\r\n\r\n\t/**\r\n\t**\tNamespace for event dispatching. Defaults to null. Can be modified using setNamespace().\r\n\t*/\r\n\tnamespace: null,\r\n\r\n\t/**\r\n\t**\tInitializes the event dispatcher.\r\n\t**\r\n\t**\tEventDispatcher __ctor ();\r\n\t*/\r\n\t__ctor: function ()\r\n\t{\r\n\t\tthis.listeners = { };\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the event dispatching namespace. Used to force all events dispatched to have the specified namespace.\r\n\t**\r\n\t**\tEventDispatcher setNamespace (value: string);\r\n\t*/\r\n\tsetNamespace: function (value)\r\n\t{\r\n\t\tthis.namespace = value;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tAdds an event listener for a specified event to the event dispatcher. The event name can have an optional\r\n\t**\tnamespace indicator which is added to the beginning of the event name and separated using a colon (:). This\r\n\t**\tindicator can be used to later trigger or remove all handlers of an specific namespace.\r\n\t**\r\n\t**\tEventDispatcher addEventListener (eventName: string, handler: function, context: object, data: object);\r\n\t*/\r\n\taddEventListener: function (eventName, handler, context, data)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (!this.listeners[name])\r\n\t\t\tthis.listeners[name] = [];\r\n\r\n\t\tthis.listeners[name].push ({ ns: ns, handler: handler, context: context, data: data, silent: 0 });\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tRemoves an event listener from the event dispatcher. If only the name is provided all handlers with the\r\n\t**\tspecified name will be removed. If a context is provided without a handler then any handler matching the\r\n\t**\tcontext will be removed. Special event name \"*\" can be used to match all event names.\r\n\t**\r\n\t**\tEventDispatcher removeEventListener (eventName: string, handler: function, context: object);\r\n\t*/\r\n\tremoveEventListener: function (eventName, handler, context)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (name == \"*\")\r\n\t\t{\r\n\t\t\tfor (var j in this.listeners)\r\n\t\t\t{\r\n\t\t\t\tvar list = this.listeners[j];\r\n\r\n\t\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar k = true;\r\n\r\n\t\t\t\t\tif (handler)\r\n\t\t\t\t\t\tk = k && list[i].handler === handler;\r\n\r\n\t\t\t\t\tif (context)\r\n\t\t\t\t\t\tk = k && list[i].context === context;\r\n\r\n\t\t\t\t\tif (ns)\r\n\t\t\t\t\t\tk = k && list[i].ns == ns;\r\n\r\n\t\t\t\t\tif (k) list.splice(i--, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (!this.listeners[name])\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tvar list = this.listeners[name];\r\n\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar k = true;\r\n\r\n\t\t\t\tif (handler)\r\n\t\t\t\t\tk = k && list[i].handler === handler;\r\n\r\n\t\t\t\tif (context)\r\n\t\t\t\t\tk = k && list[i].context === context;\r\n\r\n\t\t\t\tif (ns)\r\n\t\t\t\t\tk = k && list[i].ns == ns;\r\n\r\n\t\t\t\tif (k) list.splice(i--, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tPrepares an event with the specified parameters for its later usage. The event is started when\r\n\t**\tthe resume() method is called. If a callback is specified it will be executed once all event\r\n\t**\thandlers have been processed.\r\n\t**\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map);\r\n\t*/\r\n\tprepareEvent: function (eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\tvar list = [];\r\n\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (this.listeners[name])\r\n\t\t\tlist = list.concat (this.listeners[name]);\r\n\r\n\t\tif (this.listeners[\"*\"])\r\n\t\t\tlist = list.concat (this.listeners[\"*\"]);\r\n\r\n\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\tif (list[i].silent) list.splice (i--, 1);\r\n\r\n\t\tif (ns)\r\n\t\t{\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\tif (list[i].ns != ns) list.splice (i--, 1);\r\n\t\t}\r\n\r\n\t\treturn new Event (this, list, name, eventArgs, cbHandler, cbContext);\r\n\t},\r\n\r\n\t/**\r\n\t**\tSilences or unsilences all handlers attached to an event such that if the event fires the handler(s) will\r\n\t**\tnot be invoked. It is recommended to use a namespace to ensure other handlers will continue to be run.\r\n\t**\r\n\t**\tEventDispatcher silence (eventName: string);\r\n\t*/\r\n\tsilence: function (eventName, value)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tvalue = value === false ? -1 : 1;\r\n\r\n\t\tif (name == \"*\")\r\n\t\t{\r\n\t\t\tfor (var j in this.listeners)\r\n\t\t\t{\r\n\t\t\t\tvar list = this.listeners[j];\r\n\r\n\t\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ns && list[i].ns != ns)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tlist[i].silent += value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (!this.listeners[name])\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tvar list = this.listeners[name];\r\n\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (ns && list[i].ns != ns)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tlist[i].silent += value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tDispatches an event to the respective listeners. If a callback is specified it will be executed once\r\n\t**\tall event handlers have been processed.\r\n\t**\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map);\r\n\t*/\r\n\tdispatchEvent: function (eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\treturn this.prepareEvent(this.namespace ? this.namespace+':'+eventName: eventName, eventArgs, cbHandler, cbContext).resume();\r\n\t}\r\n});\r\n","/*\n**\trin/model-regex\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n**\tCommon regular expressions for pattern validation.\n*/\n\nmodule.exports =\n{\n\temail: /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)+$/i,\n\turl: /^[\\w-]+:\\/\\/[\\w-]+(\\.\\w+)+.*$/,\n\turlNoProt: /^[\\w-]+(\\.\\w+)+.*$/,\n\tname: /^[-A-Za-z0-9_.]+$/,\n\tuname: /^['\\pL\\pN ]+$/,\n\ttext: /^[^&<>{}]*$/,\n\tutext: /^([\\r\\n\\pL\\pN\\pS &!@#$%*\\[\\]()_+=;',.\\/?:\"~-]+)$/\n};\n","/*\n**\trin/model-constraints\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nlet Rin = require('./alpha');\nlet Regex = require('./model-regex');\n\n/**\n**\tMap of model constraint handlers. Each function should accept parameters (in order): the model object (model), the constraint value (ctval),\n**\tthe property name (name), the property value (value) and return the corrected value once verified or throw an exception if errors occur.\n*/\n\nmodule.exports =\n{\n\t/**\n\t**\tUtility function (not a handler) to get the real value given a reference string. If the value is not a string, the value itself will\n\t**\tbe returned, if it is a string starting with '#' the model property will be returned, if starts with '@' the object property will be\n\t**\treturned, otherwise the contents of the string will eval'd and returned.\n\t*/\n\t_getref: function (value, obj)\n\t{\n\t\tif (typeof(value) == \"string\")\n\t\t{\n\t\t\tif (value.substr(0, 1) == \"#\")\t\t\tvalue = obj.get(value.substr(1));\n\t\t\telse if (value.substr(0, 1) == \"@\")\t\tvalue = obj[value.substr(1)];\n\n\t\t\tif (typeof(value) == \"string\")\n\t\t\t\treturn eval(value);\n\n\t\t\treturn value;\n\t\t}\n\t\telse\n\t\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the new value is of the valid type before storing it on the property. When possible if the\n\t**\tinput is of compatible type it will be converted to the target type.\n\t*/\n\ttype: function (model, ctval, name, value)\n\t{\n\t\tswitch (ctval)\n\t\t{\n\t\t\tcase \"int\":\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"float\":\n\t\t\t\tvalue = parseFloat(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"string\":\n\t\t\t\tvalue = (value === null || value === undefined) ? \"\" : value.toString();\n\t\t\t\tbreak;\n\n\t\t\tcase \"bit\":\n\t\t\t\tif (value === true || value === false) {\n\t\t\t\t\tvalue = value ? 1 : 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\n\t\t\t\tvalue = value ? 1 : 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"array\":\n\t\t\t\tif (Rin.typeOf(value) == \"array\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (value === null || value === undefined)\n\t\t\t\t{\n\t\t\t\t\tvalue = [];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"bool\":\n\t\t\t\tif (value === \"true\" || value === true) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (value === \"false\" || value === false) {\n\t\t\t\t\tvalue = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error (ctval);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is of the specified model type.\n\t*/\n\tmodel: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!mclass) throw new Error (ctval);\n\n\t\tif (!value)\n\t\t\treturn new mclass();\n\n\t\treturn mclass.ensure (value);\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is of the specified class.\n\t*/\n\tcls: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!value) return new mclass();\n\n\t\treturn Rin.ensureTypeOf(mclass, value);\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are of the specified class. Returns error if the class does not exist\n\t**\tor if the field is not an array. Therefore a type:array constraint should be used before this one.\n\t*/\n\tarrayof: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!value) value = [];\n\n\t\tif (!mclass || Rin.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t\tvalue[i] = Rin.ensureTypeOf(mclass, value[i]);\n\t\t\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are not null. Returns error if the field is not an array, therefore a\n\t**\ttype:array constraint should be used before this one.\n\t*/\n\tarraynull: function (model, ctval, name, value)\n\t{\n\t\tvar remove = false;\n\n\t\tif (Rin.typeOf(ctval) == \"object\")\n\t\t{\n\t\t\tif (ctval.remove) remove = ctval.remove;\n\t\t\tctval = ctval.value;\n\t\t}\n\n\t\tif (ctval) return value;\n\n\t\tif (Rin.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tif (value[i] == null)\n\t\t\t{\n\t\t\t\tif (remove)\n\t\t\t\t\tvalue.splice (i--, 1);\n\t\t\t\telse\n\t\t\t\t\tthrow new Error (ctval);\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are all compliant. Returns error if the field is not an array, therefore\n\t**\ta type:array constraint should be used before this one.\n\t*/\n\tarraycompliant: function (model, ctval, name, value)\n\t{\n\t\tvar remove = false;\n\n\t\tif (Rin.typeOf(ctval) == \"object\")\n\t\t{\n\t\t\tif (ctval.remove) remove = ctval.remove;\n\t\t\tctval = ctval.value;\n\t\t}\n\n\t\tif (!ctval) return value;\n\n\t\tif (Rin.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tif (value[i] == null)\n\t\t\t\tcontinue;\n\n\t\t\tif (!value[i].isCompliant())\n\t\t\t{\n\t\t\t\tif (remove)\n\t\t\t\t\tvalue.splice (i--, 1);\n\t\t\t\telse\n\t\t\t\t\tthrow new Error (ctval);\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the presense of the field.\n\t*/\n\trequired: function (model, ctval, name, value)\n\t{\n\t\tif (value === null || value === undefined)\n\t\t\tthrow new Error (ctval ? \"\" : \"null\");\n\n\t\tswitch (Rin.typeOf(value))\n\t\t{\n\t\t\tcase \"array\":\n\t\t\t\tif (value.length == 0) throw new Error (ctval ? \"\" : \"null\");\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tif (value.toString().length == 0) throw new Error (ctval ? \"\" : \"null\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum length of the field.\n\t*/\n\tminlen: function (model, ctval, name, value)\n\t{\n\t\tif (value.toString().length < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum length of the field.\n\t*/\n\tmaxlen: function (model, ctval, name, value)\n\t{\n\t\tif (value.toString().length > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum value of the field.\n\t*/\n\tminval: function (model, ctval, name, value)\n\t{\n\t\tif (parseFloat(value) < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum value of the field.\n\t*/\n\tmaxval: function (model, ctval, name, value)\n\t{\n\t\tif (parseFloat(value) > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum number of items in the array.\n\t*/\n\tmincount: function (model, ctval, name, value)\n\t{\n\t\tif (Rin.typeOf(value) != \"array\" || value.length < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum number of items in the array.\n\t*/\n\tmaxcount: function (model, ctval, name, value)\n\t{\n\t\tif (Rin.typeOf(value) != \"array\" || value.length > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the format of the field using a regular expression. The constraint value should be the name of\n\t**\tone of the Model.Regex regular expressions.\n\t*/\n\tpattern: function (model, ctval, name, value)\n\t{\n\t\tif (!Regex[ctval].test (value.toString()))\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is inside the specified set of options. The set can be an array or a string with\n\t**\tthe options separated by vertical bar (|). The comparison is case-sensitive.\n\t*/\n\tinset: function (model, ctval, name, value)\n\t{\n\t\tif (Rin.typeOf(ctval) != \"array\")\n\t\t{\n\t\t\tif (!new RegExp(\"^(\"+ctval.toString()+\")$\").test (value.toString()))\n\t\t\t\tthrow new Error (ctval);\n\n\t\t\treturn value;\n\t\t}\n\n\t\tif (ctval.indexOf(value.toString()) == -1)\n\t\t\tthrow new Error (ctval.join(\"|\"));\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tSets the field to upper case.\n\t*/\n\tupper: function (model, ctval, name, value)\n\t{\n\t\treturn ctval ? value.toString().toUpperCase() : value;\n\t},\n\n\n\t/**\n\t**\tSets the field to lower case.\n\t*/\n\tlower: function (model, ctval, name, value)\n\t{\n\t\treturn ctval ? value.toString().toLowerCase() : value;\n\t}\n};\n","/*\n**\trin/model\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nlet Rin = require('./alpha');\nlet EventDispatcher = require('./event-dispatcher');\n\n/**\n**\tA model is a high-integrity data object used to store properties and more importantly to provide event support to notify of any\n**\tkind of change that occurs to the model's properties. Integrity of the model is maintained by optionally using property constraints.\n*/\n\nlet _Model = module.exports = EventDispatcher.extend\n({\n\t/**\n\t**\tName of the class.\n\t*/\n\tclassName: \"Model\",\n\n\t/**\n\t**\tDefault properties for the model. Can be a map with the property name and its default value or a function\n\t**\treturning a map with dynamic default values. This is used to reset the model to its initial state.\n\t*/\n\tdefaults: null,\n\n\t/**\n\t**\tModel property contraints. A map with the property name and an object specifying the constraints of the\n\t**\tproperty. This is used to determine the type, format and behavior of each property in the model.\n\t*/\n\tconstraints: null,\n\n\t/**\n\t**\tProperties of the model.\n\t*/\n\tdata: null,\n\n\t/**\n\t**\tArray with the name of the properties that have changed. Populated prior modelChanged event.\n\t*/\n\tchangedList: null,\n\n\t/**\n\t**\tSilent mode indicator. While in silent mode events will not be dispatched.\n\t*/\n\t_silent: 0,\n\n\t/**\n\t**\tCurrent nesting level of the set() method. This is used to determine when all the property\n\t**\tchanges are done.\n\t*/\n\t_level: 0,\n\n\t/**\n\t**\tInitializes the model and sets the properties to the specified data object.\n\t**\n\t**\t>> Model __ctor (object data);\n\t**\t>> Model __ctor (object data, object defaults);\n\t*/\n\t__ctor: function (data, defaults)\n\t{\n\t\tthis._super.EventDispatcher.__ctor();\n\n\t\tthis.data = { };\n\n\t\tif (defaults != null)\n\t\t{\n\t\t\tthis.reset (defaults);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar o = null;\n\n\t\t\tif (!this.defaults && this.constraints)\n\t\t\t{\n\t\t\t\tvar o = { };\n\n\t\t\t\tfor (var i in this.constraints)\n\t\t\t\t{\n\t\t\t\t\tvar j = this.constraints[i];\n\t\t\t\t\tif (j.def === null || j.def === undefined)\n\t\t\t\t\t{\n\t\t\t\t\t\to[i] = null;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof(j.def) == \"function\")\n\t\t\t\t\t\to[i] = j.def();\n\t\t\t\t\telse\n\t\t\t\t\t\to[i] = j.def;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.reset(o);\n\t\t}\n\n\t\tthis.init();\n\n\t\tif (data != null)\n\t\t\tthis.set (arguments[0], true);\n\n\t\tif (this.constraints) this.update();\n\n\t\tthis.ready();\n\t},\n\n\t/**\n\t**\tResets the model to its default state and triggers update events. If a map is provided the defaults of\n\t**\tthe model will be set to the specified map.\n\t**\n\t**\t>> Model reset (object defaults, [bool nsilent=true]);\n\t**\t>> Model reset ([bool nsilent=true]);\n\t*/\n\treset: function (defaults, nsilent)\n\t{\n\t\tif (!this.defaults)\n\t\t{\n\t\t\tif (!defaults || (Rin.typeOf(defaults) != \"object\" && Rin.typeOf(defaults) != \"function\"))\n\t\t\t\treturn this;\n\n\t\t\tthis.defaults = defaults;\n\t\t}\n\n\t\tif (Rin.typeOf(this.defaults) == \"function\")\n\t\t\tthis.data = this.defaults();\n\t\telse\n\t\t\tthis.data = Rin.clone(this.defaults);\n\n\t\treturn (nsilent === false || defaults === false) ? this : this.update(null, true);\n\t},\n\n\t/**\n\t**\tInitializes the model. Called before the model properties are set.\n\t**\n\t**\t>> void init ();\n\t*/\n\tinit: function ()\n\t{\n\t},\n\n\t/**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t**\n\t**\t>> void ready ();\n\t*/\n\tready: function ()\n\t{\n\t},\n\n\t/**\n\t**\tEnables or disables silent mode. When the model is in silent mode events will not be dispatched.\n\t**\n\t**\t>> Model silent (value: bool);\n\t*/\n\tsilent: function (value)\n\t{\n\t\tthis._silent += value ? 1 : -1;\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates a property name and value against the constraints defined in the model (if any). Returns the\n\t**\tfinal value if successful or throws an empty exception if errors occur.\n\t**\n\t**\t>> T _validate (string name, T value);\n\t*/\n\t_validate: function (name, value)\n\t{\n\t\tif (!this.constraints || !this.constraints[name])\n\t\t\treturn value;\n\n\t\tvar constraints = this.constraints[name];\n\n\t\tvar nvalue = value;\n\n\t\tfor (var ctname in constraints)\n\t\t{\n\t\t\tif (!_Model.Constraints[ctname])\n\t\t\t\tcontinue;\n\n\t\t\ttry {\n\t\t\t\tnvalue = _Model.Constraints[ctname] (this, constraints[ctname], name, nvalue);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tif (e.message == \"null\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tthrow new Error (`Constraint [${ctname}:${constraints[ctname]}] failed on property '${name}'.`);\n\t\t\t}\n\t\t}\n\n\t\treturn nvalue;\n\t},\n\n\t/**\n\t**\tSets the value of a property and returns the value set. This method is internally used to set properties\n\t**\tone at a time. If constraints are present in the model for the specified property all constraints will be\n\t**\tverified. When constraint errors occur the constraintError event will be raised and the property value\n\t**\twill not be changed.\n\t**\n\t**\t>> T _set (string name, T value);\n\t*/\n\t_set: function (name, value)\n\t{\n\t\tif (!this.constraints || !this.constraints[name])\n\t\t{\n\t\t\tthis.data[name] = value;\n\t\t\treturn value;\n\t\t}\n\n\t\tvar constraints = this.constraints[name];\n\n\t\tvar cvalue = this.data[name];\n\t\tvar nvalue = value;\n\n\t\tfor (var ctname in constraints)\n\t\t{\n\t\t\tif (!_Model.Constraints[ctname])\n\t\t\t\tcontinue;\n\n\t\t\ttry {\n\t\t\t\tnvalue = _Model.Constraints[ctname] (this, constraints[ctname], name, nvalue);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tif (e.message == \"null\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (!this._silent)\n\t\t\t\t\tthis.dispatchEvent (\"constraintError\", { constraint: ctname, message: e.message, name: name, value: value });\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn (this.data[name] = nvalue);\n\t},\n\n\t/**\n\t**\tTriggers property events to indicate a property is changing. First triggers \"propertyChanging\" and then\n\t**\t\"propertyChanged\". If the first event returns false the second event will not be triggered.\n\t**\n\t**\t>> void _propertyEvent (string name, T prev, T value, bool direct=false);\n\t*/\n\t_propertyEvent: function (name, prev, value, direct)\n\t{\n\t\tvar temp = { name: name, old: prev, value: value, level: this._level };\n\n\t\tvar evt = this.dispatchEvent (\"propertyChanging\", temp);\n\n\t\tif (!direct)\n\t\t\ttemp.value = this._set (name, temp.value);\n\t\telse\n\t\t\tthis.data[name] = temp.value;\n\n\t\tif (evt != null && evt.ret.length && evt.ret[0] === false)\n\t\t\treturn;\n\n\t\tthis.dispatchEvent (\"propertyChanged.\" + name, temp);\n\t\tthis.dispatchEvent (\"propertyChanged\", temp);\n\n\t\tthis.changedList.push (name);\n\t},\n\n\t/**\n\t**\tSets one or more properties of the model. Possible arguments can be two strings or a map.\n\t**\n\t**\t>> Model set (string name, T value, bool force=true);\n\t**\t>> Model set (string name, T value, bool silent=false);\n\t**\t>> Model set (string name, T value);\n\t**\t>> Model set (object data);\n\t*/\n\tset: function ()\n\t{\n\t\tvar n = arguments.length;\n\t\tvar force = false, silent = false;\n\n\t\tif ((n > 2 || (n == 2 && Rin.typeOf(arguments[0]) == \"object\")) && Rin.typeOf(arguments[n-1]) == \"boolean\")\n\t\t{\n\t\t\tforce = arguments[--n];\n\t\t\tif (force === false) silent = true;\n\t\t}\n\n\t\tif (this._level == 0)\n\t\t{\n\t\t\tthis.changedList = [];\n\t\t}\n\n\t\tthis._level++;\n\n\t\tif (n == 2)\n\t\t{\n\t\t\tif (this.data[arguments[0]] != arguments[1] || force)\n\t\t\t{\n\t\t\t\tif (!this._silent && !silent)\n\t\t\t\t\tthis._propertyEvent (arguments[0], this.data[arguments[0]], this._validate (arguments[0], arguments[1]));\n\t\t\t\telse\n\t\t\t\t\tthis._set (arguments[0], arguments[1]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in arguments[0])\n\t\t\t{\n\t\t\t\tif (this.data[i] != arguments[0][i] || force)\n\t\t\t\t{\n\t\t\t\t\tif (!this._silent && !silent)\n\t\t\t\t\t\tthis._propertyEvent (i, this.data[i], this._validate (i, arguments[0][i]));\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._set (i, arguments[0][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!--this._level && this.changedList.length && !silent && !this._silent)\n\t\t\tthis.dispatchEvent (\"modelChanged\", { fields: this.changedList });\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tReturns the value of a property. If no name is specified the whole map of properties will be returned.\n\t**\tIf a boolean value of \"true\" is provided the properties map will be returned but first will be compacted\n\t**\tusing the default data to ensure only valid properties are present.\n\t**\n\t**\t>> T get (string name);\n\t**\t>> object get ();\n\t**\t>> object get (true);\n\t**\t>> object get (false);\n\t**\t\n\t*/\n\tget: function (name, def)\n\t{\n\t\tif (arguments.length == 0 || name === false)\n\t\t\treturn this.data;\n\n\t\tif (arguments.length == 1 && name === true)\n\t\t\treturn this.flatten ();\n\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : this.data[name];\n\n\t\treturn this.data[name];\n\t},\n\n\t/**\n\t**\tReturns the value of a property as an integer number.\n\t**\n\t**\t>> int getInt (string name, [int def]);\n\t*/\n\tgetInt: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : parseInt (this.data[name]);\n\n\t\treturn parseInt (this.data[name]);\n\t},\n\n\t/**\n\t**\tReturns the value of a property as a floating point number.\n\t**\n\t**\t>> float getFloat (string name, [float def]);\n\t*/\n\tgetFloat: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : parseFloat (this.data[name]);\n\n\t\treturn parseFloat (this.data[name]);\n\t},\n\n\t/**\n\t**\tReturns the value of a property as a boolean value (true or false).\n\t**\n\t**\t>> bool getBool (string name, [bool def]);\n\t**\t\n\t*/\n\tgetBool: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\tname = this.data[name] === undefined ? def : this.data[name];\n\t\telse\n\t\t\tname = this.data[name];\n\n\t\tif (name === \"true\" || name === true)\n\t\t\treturn true;\n\n\t\tif (name === \"false\" || name === false)\n\t\t\treturn false;\n\n\t\treturn parseInt (name) ? true : false;\n\t},\n\n\t/**\n\t**\tReturns a reference object for a model property. The resulting object contains two methods\n\t**\tnamed \"get\" and \"set\" to modify the value of the property.\n\t**\n\t**\t>> object getReference (string name);\n\t*/\n\tgetReference: function (name)\n\t{\t\n\t\tvar m = this;\n\n\t\treturn {\n\t\t\tget: function() {\n\t\t\t\treturn m.get(name);\n\t\t\t},\n\n\t\t\tset: function(value) {\n\t\t\t\tm.set(name, value);\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t**\tSets or returns a constraint given the property name. \n\t**\n\t**\t>> Model constraint (string field, string constraint, T value);\n\t**\t>> Model constraint (string field, object constraint);\n\t**\t>> Model constraint (object constraints);\n\t**\t>> object constraint (string field);\n\t*/\n\tconstraint: function (field, constraint, value)\n\t{\n\t\tif (arguments.length == 3 || arguments.length == 2 || (arguments.length == 1 && Rin.typeOf(field) == \"object\"))\n\t\t{\n\t\t\tif (this.constraints === this.constructor.prototype.constraints)\n\t\t\t\tthis.constraints = Rin.clone (this.constraints);\n\n\t\t\tswitch (arguments.length)\n\t\t\t{\n\t\t\t\tcase 1:\n\t\t\t\t\tRin.override (this.constraints, field);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tRin.override (this.constraints[field], constraint);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.constraints[field][constraint] = value;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn !field ? this : this.constraints[field];\n\t},\n\n\t/**\n\t**\tReturns a compact version of the model properties. That is, a map only with validated properties that are\n\t**\talso present in the default data map. Returns null if the object is not compliant. If the \"safe\" parameter\n\t**\tis set one last property named \"class\" will be attached, this specifies the original classPath of the object.\n\t**\n\t**\t>> object flatten ([bool safe=false]);\n\t*/\n\tflatten: function (safe, rsafe)\n\t{\n\t\tif (safe)\n\t\t{\n\t\t\tvar data = this.flatten(false, true);\n\t\t\tif (data == null) return null;\n\n\t\t\tdata[\"class\"] = this.classPath;\n\t\t\treturn data;\n\t\t}\n\n\t\tif (!this.constraints && !this.defaults)\n\t\t\treturn this.data;\n\n\t\tif (!this.isCompliant())\n\t\t\treturn { };\n\n\t\tvar constraints = this.constraints;\n\t\tvar keys = this.defaults ? (Rin.typeOf(this.defaults) == \"function\" ? this.defaults() : this.defaults) : this.constraints;\n\n\t\tvar data = { };\n\n\t\tfor (var i in this.data)\n\t\t{\n\t\t\tif (!(i in keys)) continue;\n\n\t\t\tif (constraints && constraints[i])\n\t\t\t{\n\t\t\t\tvar ct = constraints[i];\n\n\t\t\t\tif (ct.model)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = this.data[i] ? this.data[i].flatten(rsafe) : null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (ct.arrayof)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = [];\n\n\t\t\t\t\tfor (var j = 0; j < this.data[i].length; j++)\n\t\t\t\t\t\tdata[i][j] = this.data[i][j] ? this.data[i][j].flatten(rsafe) : null;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (ct.cls)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = this.data[i] ? this.data[i].flatten() : null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdata[i] = this.data[i];\n\t\t}\n\n\t\treturn data;\n\t},\n\n\t/**\n\t**\tRemoves a property or a list of properties.\n\t**\n\t**\t>> void remove (string name, [bool nsilent=true]);\n\t**\t>> void remove (array name, [bool nsilent=true]);\n\t*/\n\tremove: function (name, nsilent)\n\t{\n\t\tif (Rin.typeOf(name) == \"array\")\n\t\t{\n\t\t\tfor (var i = 0; i < name.length; i++)\n\t\t\t\tdelete this.data[name[i]];\n\n\t\t\tif (nsilent !== false && !this._silent)\n\t\t\t\tthis.dispatchEvent (\"propertyRemoved\", { fields: name });\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdelete this.data[name];\n\n\t\t\tif (nsilent !== false && !this._silent)\n\t\t\t\tthis.dispatchEvent (\"propertyRemoved\", { fields: [name] });\n\t\t}\n\t},\n\n\t/**\n\t**\tTriggers data change events for one or more properties. Ensure that silent mode is not enabled or else\n\t**\tthis method will have no effect. If no parameters are provided a full update will be triggered on all of\n\t**\tthe model properties.\n\t**\n\t**\t>> Model update (array fields);\n\t**\t>> Model update (string name);\n\t**\t>> Model update (bool forceModelChanged);\n\t**\t>> Model update ();\n\t*/\n\tupdate: function (fields, direct)\n\t{\n\t\tif (this._silent) return this;\n\n\t\tif (this._level == 0)\n\t\t{\n\t\t\tthis.changedList = [];\n\t\t}\n\n\t\tthis._level++;\n\n\t\tif (fields && Rin.typeOf(fields) == 'string')\n\t\t{\n\t\t\tthis._propertyEvent (fields, this.data[fields], this.data[fields], direct);\n\t\t}\n\t\telse if (fields && Rin.typeOf(fields) == 'array')\n\t\t{\n\t\t\tfor (var i of fields)\n\t\t\t\tthis._propertyEvent (i, this.data[i], this.data[i], direct);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t\tthis._propertyEvent (i, this.data[i], this.data[i], direct);\n\t\t}\n\n\t\tif (!--this._level && !this._silent && (this.changedList.length != 0 || fields === true))\n\t\t\tthis.dispatchEvent (\"modelChanged\", { fields: this.changedList });\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates one or mode model properties using the defined constraints. If no parameters are provided all of\n\t**\tthe properties in the model will be validated.\n\t**\n\t**\t>> Model validate (array fields);\n\t**\t>> Model validate (string name);\n\t**\t>> Model validate ();\n\t*/\n\tvalidate: function (fields)\n\t{\n\t\tif (!this.constraints) return this;\n\n\t\tif (fields && Rin.typeOf(fields) == \"string\")\n\t\t{\n\t\t\tthis._set (fields, this.data[fields])\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t{\n\t\t\t\tif (fields && Rin.indexOf(fields, i) == -1)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._set (i, this.data[i])\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates all the properties in the model and returns a boolean indicating if all of them comply with the\n\t**\tconstraints defined in the model.\n\t**\n\t**\t>> bool isCompliant ();\n\t*/\n\tisCompliant: function ()\n\t{\n\t\tif (!this.constraints) return true;\n\n\t\ttry\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t\tthis._validate (i, this.data[i]);\n\n\t\t\treturn true;\n\t\t}\n\t\tcatch (e) {\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t**\tRegisters an event handler for changes in a specific property of the model.\n\t**\n\t**\t>> void observe (string property, function handler, object context);\n\t*/\n\tobserve: function (property, handler, context)\n\t{\n\t\tthis.addEventListener (\"propertyChanged.\" + property, handler, context);\n\t},\n\n\t/**\n\t**\tUnregisters an event handler from changes in a specific property of the model.\n\t**\n\t**\t>> void unobserve (string property, function handler, object context);\n\t*/\n\tunobserve: function (property, handler, context)\n\t{\n\t\tthis.removeEventListener (\"propertyChanged.\" + property, handler, context);\n\t},\n\n\t/**\n\t**\tSerializes the model into a string.\n\t**\n\t**\tstring toString ();\n\t*/\n\ttoString: function ()\n\t{\n\t\treturn Rin.serialize(this.get (true));\n\t}\n});\n\n\n/**\n**\tImport model constraints.\n*/\n\n_Model.Constraints = require('./model-constraints');\n","/*\n**\trin/model-list\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nlet Rin = require('./alpha');\nlet Model = require('./model');\n\n/**\n**\tGeneric list for models.\n*/\n\nmodule.exports = Model.extend\n({\n\t/**\n\t**\tName of the class.\n\t*/\n\tclassName: \"List\",\n\n\t/**\n\t**\tClass of the items in the list, can be overriden by child classes to impose a more strict constraint.\n\t*/\n\titemt: Model,\n\n\t/**\n\t**\tMirror of properties.contents\n\t*/\n\tcontents: null,\n\n\t/**\n\t**\tDefault properties of the model.\n\t*/\n\tdefaults:\n\t{\n\t\tcontents: null\n\t},\n\n\t/**\n\t**\tConstraints of the model to ensure integrity.\n\t*/\n\tconstraints:\n\t{\n\t\tcontents: {\n\t\t\ttype: \"array\",\n\t\t\tarrayof: \"@itemt\"\n\t\t}\n\t},\n\n\t/**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t**\n\t**\t>> void ready ();\n\t*/\n\tready: function ()\n\t{\n\t\tthis._eventGroup = \"ModelList_\" + Date.now() + \":modelChanged\";\n\n\t\tthis.contents = this.data.contents;\n\t},\n\n\t/**\n\t**\tConnects the event handlers to the item.\n\t**\n\t**\t>> Model _bind (int index, Model item);\n\t*/\n\t_bind: function (index, item)\n\t{\n\t\tif (item && item.addEventListener) item.addEventListener (this._eventGroup, this._onItemEvent, this, index);\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tDisconnects the event handlers from the item.\n\t**\n\t**\t>> Model _unbind (Model item);\n\t*/\n\t_unbind: function (item)\n\t{\n\t\tif (item && item.removeEventListener) item.removeEventListener (this._eventGroup);\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tHandler for item events.\n\t**\n\t**\t>> Model _onItemEvent (Event evt, object args, object data);\n\t*/\n\t_onItemEvent: function (evt, args, data)\n\t{\n\t\tthis.prepareEvent (\"itemChanged\", { index: data, item: evt.source }).from (evt)\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\t},\n\n\t/**\n\t**\tReturns the number of items in the list.\n\t**\n\t**\t>> int count ();\n\t*/\n\tcount: function ()\n\t{\n\t\treturn this.data.contents.length;\n\t},\n\n\t/**\n\t**\tClears the contents of the list.\n\t**\n\t**\t>> void clear ();\n\t*/\n\tclear: function ()\n\t{\n\t\tfor (var i = 0; i < this.data.contents; i++)\n\t\t\tthis._unbind (this.data.contents[i]);\n\n\t\tthis.data.contents = [];\n\n\t\tthis.prepareEvent (\"itemCleared\")\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\t},\n\n\t/**\n\t**\tSets the contents of the list with the specified array. All items will be ensured to be of the same model\n\t**\ttype as the one specified in the list.\n\t**\n\t**\t>> void setData (array data);\n\t*/\n\tsetData: function (data)\n\t{\n\t\tthis.clear ();\n\t\tif (!data) return;\n\n\t\tfor (var i = 0; i < data.length; i++)\n\t\t{\n\t\t\tvar item = Rin.ensureTypeOf(this.itemt, data[i]);\n\t\t\tthis._bind (i, item);\n\n\t\t\tthis.data.contents.push (item);\n\t\t}\n\n\t\tthis.prepareEvent (\"itemsChanged\")\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\t},\n\n\t/**\n\t**\tReturns the raw array contents of the list.\n\t**\n\t**\t>> array getData ();\n\t*/\n\tgetData: function ()\n\t{\n\t\treturn this.data.contents;\n\t},\n\n\t/**\n\t**\tReturns the item at the specified index or null if the index is out of bounds.\n\t**\n\t**\t>> Model getAt (int index);\n\t*/\n\tgetAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn null;\n\n\t\treturn Rin.ensureTypeOf(this.itemt, this.data.contents[index]);\n\t},\n\n\t/**\n\t**\tRemoves and returns the item at the specified index. Returns null if the index is out of bounds.\n\t**\n\t**\t>> Model removeAt (int index);\n\t*/\n\tremoveAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn null;\n\n\t\tvar item = Rin.ensureTypeOf(this.itemt, this.data.contents.splice(index, 1)[0]);\n\t\tthis._unbind (item);\n\n\t\tthis.prepareEvent (\"itemRemoved\", { index: index, item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tSets the item at the specified index. Returns false if the index is out of bounds, true otherwise. The\n\t**\titem will be ensured to be of the model defined in the list.\n\t**\n\t**\t>> bool setAt (int index, Model item);\n\t*/\n\tsetAt: function (index, item)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn false;\n\n\t\titem = Rin.ensureTypeOf(this.itemt, item);\n\n\t\tthis.data.contents[index] = item;\n\t\tthis._bind (index, item);\n\n\t\tthis.prepareEvent (\"itemChanged\", { index: index, item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tNotifies a change in the item at the specified index. Returns false if the index is out of bounds.\n\t**\n\t**\t>> bool updateAt (int index);\n\t*/\n\tupdateAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn false;\n\n\t\tthis.prepareEvent (\"itemChanged\", { index: index, item: this.data.contents[index] })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tAdds an item to the bottom of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model push (Model item);\n\t*/\n\tpush: function (item)\n\t{\n\t\tif (item && Rin.typeOf(item) != \"object\")\n\t\t\treturn null;\n\n\t\titem = Rin.ensureTypeOf(this.itemt, item);\n\n\t\tthis.data.contents.push (item);\n\t\tthis._bind (this.data.contents.length-1, item);\n\n\t\tthis.prepareEvent (\"itemAdded\", { index: this.data.contents.length-1, item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tRemoves and returns an item from the bottom of the list.\n\t**\n\t**\t>> Model pop ();\n\t*/\n\tpop: function ()\n\t{\n\t\treturn this._unbind (Rin.ensureTypeOf(this.itemt, this.data.contents.pop()));\n\t},\n\n\t/**\n\t**\tAdds an item to the top of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model unshift (Model item);\n\t*/\n\tunshift: function (item)\n\t{\n\t\tif (item && Rin.typeOf(item) != \"object\")\n\t\t\treturn null;\n\n\t\titem = Rin.ensureTypeOf(this.itemt, item);\n\n\t\tthis.data.contents.unshift (item);\n\t\tthis._bind (0, item);\n\n\t\tthis.prepareEvent (\"itemAdded\", { index: 0, item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tRemoves and returns an item from the top of the list.\n\t**\n\t**\t>> Model shift ();\n\t*/\n\tshift: function ()\n\t{\n\t\treturn this._unbind (Rin.ensureTypeOf(this.itemt, this.data.contents.shift()));\n\t},\n\n\t/**\n\t**\tSearches for an item matching the specified partial definition and returns its index. Returns -1 if the\n\t**\titem was not found. If retObject is set to true the object will be returned instead of its index and null\n\t**\twill be returned when the item is not found.\n\t**\n\t**\tint|object find (object data, bool retObject=false);\n\t*/\n\tfind: function (data, retObject)\n\t{\n\t\tvar contents = this.data.contents;\n\n\t\tfor (var i = 0; i < contents.length; i++)\n\t\t{\n\t\t\tif (Rin.partialCompare (contents[i].data, data))\n\t\t\t\treturn retObject ? contents[i] : i;\n\t\t}\n\n\t\treturn retObject ? null : -1;\n\t}\n});\n","/*\r\n**\trin/schema\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = require('./alpha');\r\n\r\n/**\r\n**\tThe utility functions in this module allow to create a very strict serialization/deserialization schema\r\n**\tto ensure that all values are of the specific type when stored in string format.\r\n*/\r\n\r\nlet Schema = module.exports =\r\n{\r\n\tType: function (proto)\r\n    {\r\n\t\tlet tmp =\r\n\t\t{\r\n            flatten: function (value, context) {\r\n                return value;\r\n            },\r\n\r\n            unflatten: function (value, context) {\r\n                return value;\r\n            }\r\n        };\r\n\r\n        return proto ? Rin.override(tmp, proto) : tmp;\r\n    },\r\n\r\n\tString: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\treturn value != null ? value.toString() : null;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn value != null ? value.toString() : null;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tInteger: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\treturn ~~value;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn ~~value;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tNumber: function (precision)\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\t_precision: precision,\r\n\t\t\t_round: false,\r\n\r\n\t\t\tprecision: function (value)\r\n\t\t\t{\r\n\t\t\t\tthis._precision = ~~value;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tvalue = parseFloat(value);\r\n\r\n\t\t\t\tif (this._precision > 0)\r\n\t\t\t\t\tvalue = (~~(value*Math.pow(10, this._precision))) / Math.pow(10, this._precision);\r\n\r\n\t\t\t\treturn value;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn parseFloat(value);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tBool: function (compact)\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\t_compact: compact,\r\n\r\n\t\t\tcompact: function(value)\r\n\t\t\t{\r\n\t\t\t\tthis._compact = value;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\tvalue = ~~value;\r\n\t\t\t\treturn this._compact ? (value > 0 ? 1 : 0) : (value > 0 ? true : false);\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn (~~value) ? true : false;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tSharedString: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return 0;\r\n\r\n\t\t\t\tvalue = value.toString();\r\n\r\n                if (!(\"strings\" in context))\r\n                {\r\n                    context.strings_map = { };\r\n                    context.strings = [ ];\r\n                }\r\n\r\n                if (!(value in context.strings_map))\r\n                {\r\n                    context.strings.push(value);\r\n                    context.strings_map[value] = context.strings.length;\r\n                }\r\n\r\n                return context.strings_map[value];\r\n            },\r\n\r\n\t\t\tunflatten: function (value, context)\r\n\t\t\t{\r\n                return value == null || value == 0 ? null : context.strings[~~value - 1];\r\n            }\r\n        });\r\n    },\r\n\r\n\tArray: function (type)\r\n    {\r\n        return Schema.Type({\r\n\r\n\t\t\titemType: type,\r\n\t\t\t_debug: false,\r\n\r\n\t\t\tdebug: function(v) {\r\n\t\t\t\tthis._debug = v;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n            of: function (type) {\r\n                this.itemType = type;\r\n                return this;\r\n            },\r\n\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return null;\r\n\r\n                let o = [ ];\r\n                \r\n                for (let i = 0; i < value.length; i++)\r\n                    o.push(this.itemType.flatten(value[i], context));\r\n\r\n                return o;\r\n            },\r\n\r\n\t\t\tunflatten: async function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return null;\r\n\r\n                let o = [ ];\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\to.push(await this.itemType.unflatten(value[i], context));\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            }\r\n        });\r\n    },\r\n\r\n    Object: function()\r\n    {\r\n        return Schema.Type({\r\n\r\n            properties: [ ],\r\n\r\n            property: function (name, type)\r\n            {\r\n                this.properties.push({ name: name, type: type });\r\n                return this;\r\n            },\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\to = { };\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = this.properties[i].type.flatten(value[this.properties[i].name], context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\to = [ ];\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to.push(this.properties[i].type.flatten(value[this.properties[i].name], context));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n            \r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = await this.properties[i].type.unflatten(value[this.properties[i].name], context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = await this.properties[i].type.unflatten(value[i], context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t},\r\n\r\n    Class: function (classConstructor)\r\n    {\r\n\t\treturn Schema.Type\r\n\t\t({\r\n            _constructor: classConstructor,\r\n\r\n            constructor: function (classConstructor)\r\n            {\r\n                this._constructor = classConstructor;\r\n                return this;\r\n            },\r\n\r\n            flatten: function (value, context)\r\n            {\r\n                return value == null ? null : value.flatten(context);\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\treturn value == null ? null : await (new this._constructor()).unflatten(value, context);\r\n            }\r\n        });\r\n\t},\r\n\r\n\t/*\r\n\t**\tUsed when you want to specify just a single property.\r\n\t*/\r\n    Property: function(name, type)\r\n    {\r\n        return Schema.Type({\r\n\r\n\t\t\tproperty: name,\r\n\t\t\ttype: type,\r\n\r\n\t\t\tname: function (name)\r\n\t\t\t{\r\n\t\t\t\tthis.property = name;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tis: function (type)\r\n\t\t\t{\r\n\t\t\t\tthis.type = type;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\to = { };\r\n\t\t\t\t\to[this.property] = this.type.flatten(value[this.property], context);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\to = this.type.flatten(value[this.property], context);\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\to[this.property] = await this.type.unflatten(value[this.property], context);\r\n\t\t\t\telse\r\n\t\t\t\t\to[this.property] = await this.type.unflatten(value, context);\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t},\r\n\r\n    Map: function()\r\n    {\r\n        return Schema.Type({\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\treturn value;\r\n\r\n\t\t\t\tlet o = [ ];\r\n\r\n\t\t\t\tfor (let i in value)\r\n\t\t\t\t{\r\n\t\t\t\t\to.push(i);\r\n\t\t\t\t\to.push(value[i]);\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n            unflatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\treturn value;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i += 2)\r\n\t\t\t\t\to[value[i]] = value[i+1];\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t}\r\n};\r\n","/*\r\n**\trin/flattenable\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Class = require('./class');\r\n\r\n/**\r\n**\tClass used to add flattening and unflattening capabilities to any object. A \"flat\" object is an object composed\r\n**\tonly of native types, that is: `null,` `boolean`, `integer`, `number`, `array` or `object`.\r\n*/\r\n\r\nmodule.exports = Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Flattenable\",\r\n\r\n\t/**\r\n\t**\tType schema used to flatten/unflatten the contents of this class. See Schema class for more information.\r\n\t*/\r\n\ttypeSchema: null,\r\n\r\n\t/**\r\n\t**\tReturns the flattened contents of the object.\r\n\t*/\r\n\tflatten: function (context)\r\n\t{\r\n\t\treturn this.typeSchema.flatten(this, context);\r\n\t},\r\n\r\n\t/**\r\n\t**\tUnflattens the given object and overrides the local contents.\r\n\t*/\r\n\tunflatten: async function (value, context)\r\n\t{\r\n\t\tObject.assign(this, await this.typeSchema.unflatten(value, context));\r\n\t\tawait this.onUnflattened();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecuted when the unflatten() method is called on the object.\r\n\t*/\r\n\tonUnflattened: async function ()\r\n\t{\r\n\t}\r\n});\r\n","/*\r\n**\trin/collection\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Flattenable = require('./flattenable');\r\nlet Schema = require('./schema');\r\nlet Rin = require('./alpha');\r\n\r\n/**\r\n**\tFlattenable collection class, used to store items and manipulate them. The items should also be flattenable.\r\n*/\r\n\r\nmodule.exports = Flattenable.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Collection\",\r\n\r\n\t/**\r\n\t**\tDescribes the type schema of the underlying items.\r\n\t*/\r\n\titemTypeSchema: null,\r\n\r\n\t/**\r\n\t**\tArray of items.\r\n\t*/\r\n\titems: null, /* Array */\r\n\r\n\t/**\r\n\t**\tConstructs the collection.\r\n\t*/\r\n\t__ctor: function (itemTypeSchema)\r\n\t{\r\n\t\tif (!itemTypeSchema) itemTypeSchema = this.itemTypeSchema;\r\n\r\n\t\tif (itemTypeSchema)\r\n\t\t\tthis.typeSchema = Schema.Property('items').is(Schema.Array().of(itemTypeSchema));\r\n\r\n\t\tthis.reset();\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecuted after the collection has been unflattened, re-adds the items to ensure onItemAdded() is called.\r\n\t*/\r\n\tonUnflattened: function()\r\n\t{\r\n\t\tlet items = this.items;\r\n\t\tthis.reset();\r\n\r\n\t\tfor (let i of items)\r\n\t\t\tthis.add(i);\r\n\t},\r\n\r\n\t/*\r\n\t**\tResets the collection to empty. Note that onItemRemoved will not be called.\r\n\t*/\r\n\treset: function ()\r\n\t{\r\n\t\tthis.items = [];\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tClears the contents of the collection.\r\n\t*/\r\n\tclear: function ()\r\n\t{\r\n\t\tvar items = this.items;\r\n\t\tthis.reset();\r\n\r\n\t\tfor (var i = 0; i < items.length; i++)\r\n\t\t\tthis.onItemRemoved (items[i], 0);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tSorts the collection. A comparison function should be provided, or the name of a property to sort by.\r\n\t**\r\n\t**\tObject sort (fn: Function)\r\n\t**\tObject sort (prop: string, [desc:bool=false])\r\n\t*/\r\n\tsort: function (fn, desc)\r\n\t{\r\n\t\tif (typeof(fn) != \"function\")\r\n\t\t{\r\n\t\t\tthis.items.sort(function(a, b)\r\n\t\t\t{\r\n\t\t\t\treturn (a[fn] <= b[fn] ? -1 : 1) * (desc === true ? -1 : 1);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse\r\n\t\t\tthis.items.sort(fn);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tSearches for an item with the specified fields and returns it. The \"inc\" object is the \"inclusive\" map, meaning all fields must match\r\n\t**\tand the optional \"exc\" is the exclusive map, meaning not even one field should match.\r\n\t**\r\n\t**\tObject findItem (inc: Object, exc: Object);\r\n\t*/\t\r\n\tfindItem: function (inc, exc)\r\n\t{\r\n\t\tif (!this.items) return null;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t{\r\n\t\t\tif (exc && Rin.partialCompare(this.items[i], exc))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (Rin.partialCompare(this.items[i], inc))\r\n\t\t\t\treturn this.items[i];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the container array.\r\n\t*/\r\n\tgetItems: function ()\r\n\t{\r\n\t\treturn this.items;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the number of items in the collection.\r\n\t*/\r\n\tcount: function ()\r\n\t{\r\n\t\treturn this.items.length;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns true if the collection is empty.\r\n\t*/\r\n\tisEmpty: function ()\r\n\t{\r\n\t\treturn !this.items.length;\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item to the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/\r\n\tadd: function (item)\r\n\t{\r\n\t\tif (!item || !this.onBeforeItemAdded(item))\r\n\t\t\treturn this;\r\n\r\n\t\tthis.items.push (item);\r\n\t\tthis.onItemAdded (item);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item at the specified index, effectively moving the remaining items to the right.\r\n\t*/\r\n\taddAt: function (index, item)\r\n\t{\r\n\t\tif (!item || !this.onBeforeItemAdded (item))\r\n\t\t\treturn this;\r\n\r\n\t\tif (index < 0) index = 0;\r\n\t\tif (index > this.items.length) index = this.items.length;\r\n\r\n\t\tif (index == 0)\r\n\t\t{\r\n\t\t\tthis.items.unshift(item);\r\n\t\t}\r\n\t\telse if (index == this.items.length)\r\n\t\t{\r\n\t\t\tthis.items.push(item);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar tmp = this.items.splice(0, index);\r\n\t\t\ttmp.push(item);\r\n\r\n\t\t\tthis.items = tmp.concat(this.items);\r\n\t\t}\r\n\r\n\t\tthis.onItemAdded (item);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tTraverses the given array and adds all items to the collection.\r\n\t*/\r\n\taddItems: function (list)\r\n\t{\r\n\t\tif (!list) return this;\r\n\r\n\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\tthis.add (list[i]);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the index of the specified item, or -1 if not found.\r\n\t*/\r\n\tindexOf: function (item)\r\n\t{\r\n\t\treturn this.items.indexOf(item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the item at the specified index, or null if not found.\r\n\t*/\r\n\tgetAt: function (index, rel)\r\n\t{\r\n\t\tif (index < 0 && rel == true)\r\n\t\t\tindex += this.items.length;\r\n\r\n\t\treturn index >= 0 && index < this.items.length ? this.items[index] : null;\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the item at the specified index.\r\n\t*/\r\n\tremoveAt: function (index)\r\n\t{\r\n\t\tif (index < 0 || index >= this.items.length)\r\n\t\t\treturn this;\r\n\r\n\t\tvar item = this.items[index];\r\n\r\n\t\tthis.items.splice (index, 1);\r\n\r\n\t\tthis.onItemRemoved (item, index);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the specified item.\r\n\t*/\r\n\tremove: function (item)\r\n\t{\r\n\t\tthis.removeAt (this.indexOf(item));\r\n\t},\r\n\r\n\t/*\r\n\t**\tRuns the specified callback for each of the items in the collection, if false is returned by the callback this function\r\n\t**\twill exit immediately. Parameters to the callback are: (item, index, collection).\r\n\t*/\r\n\tforEach: function (callback)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t\tif (callback (this.items[i], i, this) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecutes a method call with the specified parameters on each of the items in the collection, if false is returned by the\r\n\t**\titem's method this function will exit immediately.\r\n\t*/\r\n\tforEachCall: function (method, ...args)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t\tif (this.items[i][method] (...args) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExactly the same as forEach but in reverse order.\r\n\t*/\r\n\tforEachRev: function (callback)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = this.items.length-1; i >= 0; i--)\r\n\t\t\tif (callback (this.items[i], i, this) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExactly the same as forEachCall but in reverse order.\r\n\t*/\r\n\tforEachRevCall: function (method, ...args)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = this.items.length-1; i >= 0; i--)\r\n\t\t\tif (this.items[i][method] (...args) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the beforeItemAdded event. If returns false the item will not be added.\r\n\t*/\r\n\tonBeforeItemAdded: function (item)\r\n\t{\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the itemAdded event.\r\n\t*/\r\n\tonItemAdded: function (item)\r\n\t{\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the itemRemoved event.\r\n\t*/\r\n\tonItemRemoved: function (item)\r\n\t{\r\n\t}\r\n});\r\n","/*\n**\trin/template\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nlet Rin = require('./alpha');\n\n/**\n**\tTemplating module. The template formats available are shown below, note that the sym-open and sym-close symbols are by\n**\tdefault the square brackets, however those can be modified since are just parameters.\n**\n**\tHTML Escaped Output:\t\t\t[data.value]\t\t\t\t\tEscapes HTML characters from the output.\n**\tRaw Output:\t\t\t\t\t\t[!data.value]\t\t\t\t\tDoes not escape HTML characters from the output (used to output direct HTML).\n**\tDouble-Quoted Escaped Output:\t[data.value]\t\t\t\t\tEscapes HTML characters and surrounds with double quotes.\n**\tImmediate Reparse:\t\t\t\t[<....] [@....] \"...\" '...'\t\tReparses the contents as if parseTemplate() was called again.\n**\tImmediate Output:\t\t\t\t[:...]\t\t\t\t\t\t\tTakes the contents and outputs exactly as-is without format and optionally surrounded by the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsym-open and sym-close symbols when the first character is not '<', sym_open or space.\n**\tFiltered Output:\t\t\t\t[functionName ... <expr> ...]\tRuns a function call, 'expr' can be any of the allowed formats shown here (nested if desired),\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunctionName should map to one of the available expression functions registered in the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRin.Template.functions map, each of which have their own parameters.\n*/\n\nlet Template = module.exports =\n{\n\t/*\n\t**\tStrict mode flag. When set, any undefined expression function will trigger an exception.\n\t*/\n\tstrict: false,\n\n\t/**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method.\n\t**\n\t**\t>> array parseTemplate (string template, char sym_open, char sym_close, bool is_tpl=false);\n\t*/\n\tparseTemplate: function (template, sym_open, sym_close, is_tpl=false, root=1)\n\t{\n\t\tlet nflush = 'string', flush = null, state = 0, count = 0;\n\t\tlet str = '', parts = [], mparts = parts, nparts = false;\n\n\t\tif (is_tpl === true)\n\t\t{\n\t\t\ttemplate = template.trim();\n\t\t\tnflush = 'identifier';\n\t\t\tstate = 10;\n\n\t\t\tmparts.push(parts = []);\n\t\t}\n\n\t\ttemplate += \"\\0\";\n\n\t\tfunction unescape (value)\n\t\t{\n\t\t\tif (typeof(value) == 'object')\n\t\t\t{\n\t\t\t\tif (value instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < value.length; i++)\n\t\t\t\t\t\tunescape(value[i]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvalue.data = unescape(value.data);\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < value.length; i++)\n\t\t\t{\n\t\t\t\tif (value[i] == '\\\\')\n\t\t\t\t{\n\t\t\t\t\tlet r = value[i+1];\n\n\t\t\t\t\tswitch (r)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 'n': r = \"\\n\"; break;\n\t\t\t\t\t\tcase 'r': r = \"\\r\"; break;\n\t\t\t\t\t\tcase 'f': r = \"\\f\"; break;\n\t\t\t\t\t\tcase 'v': r = \"\\v\"; break;\n\t\t\t\t\t\tcase 't': r = \"\\t\"; break;\n\t\t\t\t\t\tcase 's': r = \"\\s\"; break;\n\t\t\t\t\t\tcase '\"': r = \"\\\"\"; break;\n\t\t\t\t\t\tcase \"'\": r = \"\\'\"; break;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = value.substr(0, i) + r + value.substr(i+2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction emit (type, data)\n\t\t{\n\t\t\tif (type == 'template')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, true, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, false, 0);\n\t\t\t\ttype = 'base-string';\n\n\t\t\t\tif (Rin.typeOf(data) == 'array')\n\t\t\t\t{\n\t\t\t\t\ttype = data[0].type;\n\t\t\t\t\tdata = data[0].data;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (type == 'parse-trim-merge')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data.trim().split('\\n').map(i => i.trim()).join(\"\\n\"), sym_open, sym_close, false, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse-merge')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, false, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse-merge-alt')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, '{', '}', false, 0);\n\t\t\t}\n\n\t\t\tif (type == 'parse-merge' || type == 'parse-merge-alt' || type == 'parse-trim-merge')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tparts.push(data[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\tparts.push({ type: type, data: data });\n\n\t\t\tif (nparts)\n\t\t\t{\n\t\t\t\tmparts.push(parts = []);\n\t\t\t\tnparts = false;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < template.length; i++)\n\t\t{\n\t\t\tif (template[i] == '\\\\')\n\t\t\t{\n\t\t\t\tstr += '\\\\';\n\t\t\t\tstr += template[++i];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tswitch (state)\n\t\t\t{\n\t\t\t\tcase 0:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '<')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'parse-merge';\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '@')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'parse-trim-merge';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == ':')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 12; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'string';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'template';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstr += template[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 1:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 0;\n\t\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 10:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '.')\n\t\t\t\t\t{\n\t\t\t\t\t\temit (nflush, str);\n\t\t\t\t\t\temit ('access', '.');\n\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i].match(/[\\t\\n\\r\\f\\v ]/) != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t\tnparts = true;\n\n\t\t\t\t\t\twhile (template[i].match(/[\\t\\n\\r\\f\\v ]/) != null) i++;\n\t\t\t\t\t\ti--;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '<')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 11; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '@')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 11; count = 1; nflush = 'parse-trim-merge';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '\"')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 14; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '\\'')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 15; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '`')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 16; count = 1; nflush = 'parse-merge-alt';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == ':')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 13; count = 1; nflush = 'string';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) emit (nflush, str);\n\t\t\t\t\t\tstate = 11; count = 1; str = ''; nflush = 'parse';\n\t\t\t\t\t\tstr += template[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (nflush != 'identifier')\n\t\t\t\t\t{\n\t\t\t\t\t\temit (nflush, str);\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 11:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 12:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (str.length != 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!(str[0] == '<' || str[0] == '[' || str[0] == ' '))\n\t\t\t\t\t\t\t\t\tstr = sym_open + str + sym_close;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tstate = 0;\n\t\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 13:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!(str[0] == '<' || str[0] == '[' || str[0] == ' '))\n\t\t\t\t\t\t\t\tstr = sym_open + str + sym_close;\n\n\t\t\t\t\t\t\tstate = 10;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 14:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '\"')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '\"');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 15:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '\\'')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '\\'');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 16:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '`')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '`');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (flush)\n\t\t\t{\n\t\t\t\temit (flush, str);\n\t\t\t\tflush = str = '';\n\t\t\t}\n\t\t}\n\n\t\tif (!is_tpl)\n\t\t{\n\t\t\tlet i = 0;\n\t\t\twhile (i < mparts.length)\n\t\t\t{\n\t\t\t\tif (mparts[i].type == 'string' && mparts[i].data == '')\n\t\t\t\t\tmparts.splice(i, 1);\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ti = mparts.length-1;\n\t\t\twhile (i > 0)\n\t\t\t{\n\t\t\t\tif (mparts[i].type == 'string' && mparts[i].data == '')\n\t\t\t\t\tmparts.splice(i--, 1);\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (mparts.length == 0)\n\t\t\t\tmparts.push({ type: 'string', data: '' });\n\t\t}\n\n\t\tif (root)\n\t\t\tunescape(mparts);\n\n\t\treturn mparts;\n\t},\n\n\t/**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method. This\n\t**\tversion assumes the sym_open and sym_close chars are [ and ] respectively.\n\t**\n\t**\t>> array parse (string template);\n\t*/\n\tparse: function (template)\n\t{\n\t\treturn this.parseTemplate(template.trim(), '[', ']', false);\n\t},\n\n\t/**\n\t**\tExpands a template using the given data object, ret can be set to 'text' or 'obj' allowing to expand the template as\n\t**\ta string (text) or an array of objects (obj) respectively. If none provided it will be expanded as text.\n\t**\n\t**\t>> string/array expand (array parts, object data, string ret='text', string mode='base-string');\n\t*/\n\texpand: function (parts, data, ret='text', mode='base-string')\n\t{\n\t\tlet s = [];\n\n\t\t// Expand variable parts.\n\t\tif (mode == 'var')\n\t\t{\n\t\t\tlet escape = true;\n\t\t\tlet quote = false;\n\n\t\t\tlet root = data;\n\t\t\tlet last = null;\n\t\t\tlet first = true;\n\t\t\tlet str = '';\n\n\t\t\tfor (let i = 0; i < parts.length && data != null; i++)\n\t\t\t{\n\t\t\t\tswitch (parts[i].type)\n\t\t\t\t{\n\t\t\t\t\tcase 'identifier':\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tstr += parts[i].data;\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\tlast = this.expand(parts[i].data, root, 'arg', 'template');\n\t\t\t\t\t\tstr += typeof(last) != 'object' ? last : '';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\tstr += this.expand(parts[i].data, root, 'arg', 'base-string');\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'access':\n\t\t\t\t\t\tif (!last || typeof(last) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!str) str = 'this';\n\n\t\t\t\t\t\t\twhile (true)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (str[0] == '!')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t\tescape = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (str[0] == '$')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t\tquote = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (str != 'this' && data != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmp = data;\n\t\t\t\t\t\t\t\tdata = (str in data) ? data[str] : null;\n\n\t\t\t\t\t\t\t\tif (data === null && first)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (str in Template.functions)\n\t\t\t\t\t\t\t\t\t\tdata = Template.functions[str] (null, null, tmp);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdata = last;\n\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (str != '')\n\t\t\t{\n\t\t\t\tif (str[0] == '!')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\tescape = false;\n\t\t\t\t}\n\t\t\t\telse if (str[0] == '$')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\tquote = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (str != 'this')\n\t\t\t{\n\t\t\t\tlet failed = false;\n\n\t\t\t\tif (data != null)\n\t\t\t\t{\n\t\t\t\t\tif (!(str in data))\n\t\t\t\t\t{\n\t\t\t\t\t\tfailed = true;\n\t\t\t\t\t\tdata = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tdata = data[str];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tfailed = true;\n\n\t\t\t\tif (failed && parts.length == 1)\n\t\t\t\t{\n\t\t\t\t\tif (Template.strict == true)\n\t\t\t\t\t\tthrow new Error ('Expression function `'+str+'` not found.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof(data) == 'string')\n\t\t\t{\n\t\t\t\tif (escape)\n\t\t\t\t\tdata = data.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n\n\t\t\t\tif (quote)\n\t\t\t\t\tdata = '\"' + data + '\"';\n\t\t\t}\n\n\t\t\ts.push(data);\n\t\t}\n\n\t\t// Expand variable parts and returns a reference to it.\n\t\tif (ret == 'varref')\n\t\t{\n\t\t\tlet root = data;\n\t\t\tlet last = null;\n\t\t\tlet first = true;\n\t\t\tlet str = '';\n\n\t\t\tfor (let i = 0; i < parts.length && data != null; i++)\n\t\t\t{\n\t\t\t\tswitch (parts[i].type)\n\t\t\t\t{\n\t\t\t\t\tcase 'identifier':\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tstr += parts[i].data;\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\tlast = this.expand(parts[i].data, root, 'arg', 'template');\n\t\t\t\t\t\tstr += typeof(last) != 'object' ? last : '';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\tstr += this.expand(parts[i].data, root, 'arg', 'base-string');\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'access':\n\t\t\t\t\t\tif (!last || typeof(last) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!str) str = 'this';\n\n\t\t\t\t\t\t\twhile (true)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (str[0] == '!')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (str[0] == '$')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (str != 'this' && data != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmp = data;\n\t\t\t\t\t\t\t\tdata = (str in data) ? data[str] : null;\n\n\t\t\t\t\t\t\t\tif (data === null && first)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (str in Template.functions)\n\t\t\t\t\t\t\t\t\t\tdata = Template.functions[str] (null, null, tmp);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdata = last;\n\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (str != '')\n\t\t\t{\n\t\t\t\tif (str[0] == '!')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t}\n\t\t\t\telse if (str[0] == '$')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn str != 'this' ? [data, str] : null;\n\t\t}\n\n\t\t// Expand function parts.\n\t\tif (mode == 'fn')\n\t\t{\n\t\t\tvar args = [];\n\n\t\t\targs.push(Template.expand(parts[0], data, 'text', 'base-string'));\n\n\t\t\tif ('_'+args[0] in Template.functions)\n\t\t\t\targs[0] = '_'+args[0];\n\n\t\t\tif (!(args[0] in Template.functions))\n\t\t\t{\n\t\t\t\tif (Template.strict == true)\n\t\t\t\t\tthrow new Error ('Expression function `'+args[0]+'` not found.');\n\n\t\t\t\treturn `(Unknown: ${args[0]})`;\n\t\t\t}\n\n\t\t\tif (args[0][0] == '_')\n\t\t\t\treturn Template.functions[args[0]] (parts, data);\n\n\t\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\t\targs.push(Template.expand(parts[i], data, 'arg', 'base-string'));\n\n\t\t\ts.push(Template.functions[args[0]] (args, parts, data));\n\t\t}\n\n\t\t// Template mode.\n\t\tif (mode == 'template')\n\t\t{\n\t\t\tif (parts.length == 1)\n\t\t\t{\n\t\t\t\tif (parts[0].length == 1 && parts[0][0].type == 'string')\n\t\t\t\t\treturn parts[0][0].data;\n\n\t\t\t\tif (parts[0].length == 1 && parts[0][0].type == 'identifier')\n\t\t\t\t{\n\t\t\t\t\tlet name = parts[0][0].data;\n\n\t\t\t\t\tif (name in Template.functions || '_'+name in Template.functions)\n\t\t\t\t\t\treturn Template.expand(parts, data, ret, 'fn');\n\t\t\t\t}\n\t\n\t\t\t\treturn Template.expand(parts[0], data, ret, 'var');\n\t\t\t}\n\n\t\t\treturn Template.expand(parts, data, ret, 'fn');\n\t\t}\n\n\t\t// Expand parts.\n\t\tif (mode == 'base-string')\n\t\t{\n\t\t\tlet index = -1;\n\n\t\t\tfor (let i of parts)\n\t\t\t{\n\t\t\t\tlet tmp = null;\n\t\t\t\tindex++;\n\n\t\t\t\tswitch (i.type)\n\t\t\t\t{\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\ttmp = Template.expand(i.data, data, ret, 'template');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'string': case 'identifier':\n\t\t\t\t\t\ttmp = i.data;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\ttmp = Template.expand(i.data, data, ret, 'base-string');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (ret == 'void')\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (ret == 'last' && index != parts.length-1)\n\t\t\t\t\tcontinue;\n\n\t\t\t\ts.push(tmp);\n\t\t\t}\n\t\t}\n\n\t\t// Return types for direct objects.\n\t\tif (ret == 'obj') return s;\n\n\t\tif (ret == 'last')\n\t\t{\n\t\t\tif (typeOf(s) == 'Rose\\\\Arry')\n\t\t\t\ts = s[0];\n\n\t\t\treturn s;\n\t\t}\n\n\t\t// When the output is not really needed.\n\t\tif (ret == 'void') return null;\n\n\t\t// Return as argument ('object' if only one, or string if more than one), that is, the first item in the result.\n\t\tif (ret == 'arg')\n\t\t{\n\t\t\tif (Rin.typeOf(s) == 'array')\n\t\t\t{\n\t\t\t\tif (s.length != 1)\n\t\t\t\t\treturn s.join('');\n\n\t\t\t\treturn s[0];\n\t\t\t}\n\n\t\t\treturn s;\n\t\t}\n\n\t\tif (ret == 'text' && Rin.typeOf(s) == 'array')\n\t\t{\n\t\t\tlet f = (e => e != null && typeof(e) == 'object' ? ('map' in e ? e.map(f).join('') : ('join' in e ? e.join('') : e.toString())) : e);\n\t\t\ts = s.map(f).join('');\n\t\t}\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tParses the given template and returns a function that when called with an object will expand the template.\n\t**\n\t**\t>> object compile (string template);\n\t*/\n\tcompile: function (template)\n\t{\n\t\ttemplate = Template.parse(template);\n\n\t\treturn function (data=null, mode='text') {\n\t\t\treturn Template.expand(template, data ? data : { }, mode);\n\t\t};\n\t},\n\n\t/**\n\t**\tParses and expands the given template immediately.\n\t**\n\t**\t>> object eval (string template, object data, string mode='text');\n\t*/\n\teval: function (template, data=null, mode='text')\n\t{\n\t\ttemplate = Template.parse(template);\n\t\treturn Template.expand(template, data ? data : { }, mode);\n\t},\n\n\t/**\n\t**\tExpands the template as 'arg' and returns the result.\n\t**\n\t**\t>> object value (string parts, object data);\n\t*/\n\tvalue: function (parts, data=null)\n\t{\n\t\treturn Rin.typeOf(parts) != 'array' ? parts : Template.expand(parts, data ? data : { }, 'arg');\n\t},\n\n\t/**\n\t**\tRegisters an expression function.\n\t**\n\t**\t>> object register (string name, function fn);\n\t*/\n\tregister: function (name, fn)\n\t{\n\t\tTemplate.functions[name] = fn;\n\t},\n\n\t/**\n\t**\tCalls an expression function.\n\t**\n\t**\t>> object call (string name, object args, object data);\n\t*/\n\t'call': function (name, args, data=null)\n\t{\n\t\tif (name in Template.functions)\n\t\t\treturn Template.functions[name] (args, null, data);\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tReturns a map given a 'parts' array having values of the form \"name: value\" or \":name value\".\n\t**\n\t**\t>> Map getNamedValues (array parts, object data, int i=1, bool expanded=true);\n\t*/\n\tgetNamedValues: function (parts, data, i=1, expanded=true)\n\t{\n\t\tlet s = { };\n\t\tlet mode = 0;\n\t\n\t\tfor (; i < parts.length; i += 2)\n\t\t{\n\t\t\tlet key = Template.expand(parts[i], data, 'arg');\n\n\t\t\tif (!mode) {\n\t\t\t\tif (key.startsWith(':')) mode = 1; else mode = key.endsWith(':') ? 2 : 3;\n\t\t\t}\n\n\t\t\tif (mode == 1)\n\t\t\t\tkey = key.substr(1);\n\t\t\telse if (mode == 2)\n\t\t\t\tkey = key.substr(0, key.length-1);\n\n\t\t\tif (expanded)\n\t\t\t\ts[key] = Template.expand(parts[i+1], data, 'arg');\n\t\t\telse\n\t\t\t\ts[key] = parts[i+1];\n\t\t}\n\n\t\treturn s;\n\t}\n};\n\n\n/**\n**\tTemplate functions, functions that are used to format data. Each function takes three parameters (args, parts and data). By default the function arguments\n**\tare expanded and passed via 'args' for convenience, however if the function name starts with '_' the 'args' parameter will be skipped and only (parts, data)\n**\twill be available, each 'part' must be expanded manually by calling Template.expand.\n*/\n\nTemplate.functions =\n{\n\t/**\n\t**\tExpression functions.\n\t*/\n\t'null': function(args) { return null; },\n\t'true': function(args) { return true; },\n\t'false': function(args) { return false; },\n\n\t'len': function(args) { return args[1].toString().length; },\n\t'int': function(args) { return ~~args[1]; },\n\t'str': function(args) { return args[1].toString(); },\n\t'float': function(args) { return parseFloat(args[1]); },\n\t'chr': function(args) { return String.fromCharCode(args[1]); },\n\t'ord': function(args) { return args[1].toString().charCodeAt(0); },\n\n\t'not': function(args) { return !args[1]; },\n\t'neg': function(args) { return -args[1]; },\n\t'abs': function(args) { return Math.abs(args[1]); },\n\n\t'eq': function(args) { return args[1] == args[2]; },\n\t'ne': function(args) { return args[1] != args[2]; },\n\t'lt': function(args) { return args[1] < args[2]; },\n\t'le': function(args) { return args[1] <= args[2]; },\n\t'gt': function(args) { return args[1] > args[2]; },\n\t'ge': function(args) { return args[1] >= args[2]; },\n\t'and': function(args) { for (let i = 1; i < args.length; i++) if (!args[i]) return false; return true; },\n\t'or': function(args) { for (let i = 1; i < args.length; i++) if (~~args[i]) return true; return false; },\n\n\t'isnotnull': function(args) { return !!args[1]; },\n\t'isnull': function(args) { return !args[1]; },\n\t'typeof': function(args) { return Rin.typeOf(args[1]); },\n\n\t'*': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x *= args[i]; return x; },\n\t'mul': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x *= args[i]; return x; },\n\t'/': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x /= args[i]; return x; },\n\t'div': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x /= args[i]; return x; },\n\t'+': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= -args[i]; return x; },\n\t'sum': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= -args[i]; return x; },\n\t'-': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= args[i]; return x; },\n\t'sub': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= args[i]; return x; },\n\t'mod': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x %= args[i]; return x; },\n\t'**': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x = Math.pow(x, args[i]); return x; },\n\t'pow': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x = Math.pow(x, args[i]); return x; },\n\n\t/**\n\t**\tReturns the JSON representation of the expression.\n\t**\n\t**\tjson <expr>\n\t*/\n\t'json': function (args)\n\t{\n\t\treturn JSON.stringify(args[1]);\n\t},\n\n\t/**\n\t**\tSets a variable in the data context.\n\t**\n\t**\tset <var-name> <expr>\n\t*/\n\t'_set': function (parts, data)\n\t{\n\t\tlet value = Template.value(parts[2], data);\n\n\t\tif (parts[1].length > 1)\n\t\t{\n\t\t\tlet ref = Template.expand(parts[1], data, 'varref');\n\t\t\tif (ref != null) ref[0][ref[1]] = value;\n\t\t\treturn '';\n\t\t}\n\t\n\t\tdata[Template.value(parts[1], data)] = value;\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tReturns the expression without white-space on the left or right. The expression can be a string or an array.\n\t**\n\t**\ttrim <expr>\n\t*/\n\t'trim': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.trim()) : args[1].trim()) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression in uppercase. The expression can be a string or an array.\n\t**\n\t**\tupper <expr>\n\t*/\n\t'upper': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.toUpperCase()) : args[1].toUpperCase()) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression in lower. The expression can be a string or an array.\n\t**\n\t**\tlower <expr>\n\t*/\n\t'lower': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.toLowerCase()) : args[1].toLowerCase()) : '';\n\t},\n\n\t/**\n\t**\tReturns a sub-string of the given string.\n\t**\n\t**\tsubstr <start> <count> <string>\n\t**\tsubstr <start> <string>\n\t*/\n\t'substr': function (args)\n\t{\n\t\tlet s = args[args.length-1].toString();\n\n\t\tlet start = 0;\n\t\tlet count = null;\n\n\t\tif (args.length == 4)\n\t\t{\n\t\t\tstart = ~~(args[1]);\n\t\t\tcount = ~~(args[2]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstart = ~~(args[1]);\n\t\t\tcount = null;\n\t\t}\n\n\t\tif (start < 0) start += s.length;\n\t\tif (count < 0) count += s.length;\n\n\t\tif (count === null)\n\t\t\tcount = s.length - start;\n\n\t\treturn s.substr(start, count);\n\t},\n\n\t/**\n\t**\tReplaces a matching string with the given replacement string in a given text.\n\t**\n\t**\treplace <search> <replacement> <text>\n\t*/\n\t'replace': function (args)\n\t{\n\t\treturn args[3].split(args[1]).join(args[2]);\n\t},\n\n\t/**\n\t**\tConverts all new-line chars in the expression to <br/>, the expression can be a string or an array.\n\t**\n\t**\tnl2br <expr>\n\t*/\n\t'nl2br': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.replace(/\\n/g, \"<br/>\")) : args[1].replace(/\\n/g, \"<br/>\")) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression inside an XML tag named 'tag-name', the expression can be a string or an array.\n\t**\n\t**\t% <tag-name> <expr>\n\t*/\n\t'%': function (args)\n\t{\n\t\targs.shift();\n\t\tvar name = args.shift();\n\n\t\tlet s = '';\n\n\t\tfor (let i = 0; i < args.length; i++)\n\t\t{\n\t\t\tif (Rin.typeOf(args[i]) == 'array')\n\t\t\t{\n\t\t\t\ts += `<${name}>`;\n\t\t\t\t\n\t\t\t\tfor (let j = 0; j < args[i].length; j++)\n\t\t\t\t\ts += args[i][j];\n\n\t\t\t\ts += `</${name}>`;\n\t\t\t}\n\t\t\telse\n\t\t\t\ts += `<${name}>${args[i]}</${name}>`;\n\t\t}\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tReturns the expression inside an XML tag named 'tag-name', attributes are supported.\n\t**\n\t**\t%% <tag-name> [<attr> <value>]* [<content>]\n\t*/\n\t'%%': function (args)\n\t{\n\t\targs.shift();\n\t\tvar name = args.shift();\n\n\t\tlet attr = '';\n\t\tlet text = '';\n\n\t\tfor (let i = 0; i < args.length; i += 2)\n\t\t{\n\t\t\tif (i+1 < args.length)\n\t\t\t\tattr += ` ${args[i]}=\"${args[i+1]}\"`;\n\t\t\telse\n\t\t\t\ttext = args[i];\n\t\t}\n\n\t\treturn text ? `<${name}${attr}>${text}</${name}>` : `<${name}${attr}/>`;\n\t},\n\n\t/**\n\t**\tJoins the given array expression into a string. The provided string-expr will be used as separator.\n\t**\n\t**\tjoin <string-expr> <array-expr>\n\t*/\n\t'join': function (args)\n\t{\n\t\tif (args[2] && Rin.typeOf(args[2]) == 'array')\n\t\t\treturn args[2].join(args[1]);\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tSplits the given expression by the specified string. Returns an array.\n\t**\n\t**\tsplit <string-expr> <expr>\n\t*/\n\t'split': function (args)\n\t{\n\t\tif (args[2] && typeof(args[2]) == \"string\")\n\t\t\treturn args[2].split(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tReturns an array with the keys of the given object-expr.\n\t**\n\t**\tkeys <object-expr>\n\t*/\n\t'keys': function (args)\n\t{\n\t\tif (args[1] && typeof(args[1]) == \"object\")\n\t\t\treturn Object.keys(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tReturns an array with the values of the given object-expr.\n\t**\n\t**\tvalues <object-expr>\n\t*/\n\t'values': function (args)\n\t{\n\t\tif (args[1] && typeof(args[1]) == \"object\")\n\t\t\treturn Object.values(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tConstructs an array obtained by expanding the given template for each of the items in the list-expr, the mandatory varname\n\t**\tparameter (namely 'i') indicates the name of the variable that will contain the data of each item as the list-expr is\n\t**\ttraversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote the index/key and numeric index\n\t**\tof the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\teach <varname> <list-expr> <template>\n\t*/\n\t'_each': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\n\t\tlet s = [];\n\t\tlet j = 0;\n\n\t\tif (!list) return s;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\ts.push(Template.expand(parts[3], data, 'text'));\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tExpands the given template for each of the items in the list-expr, the mandatory varname parameter (namely 'i') indicates the name of the variable\n\t**\tthat will contain the data of each item as the list-expr is traversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote\n\t**\tthe index/key and numeric index of the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\tDoes not produce any output (returns null).\n\t**\n\t**\tforeach <varname> <list-expr> <template>\n\t*/\n\t'_foreach': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\n\t\tlet j = 0;\n\n\t\tif (!list) return null;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tTemplate.expand(parts[3], data, 'text');\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tReturns the valueA if the expression is true otherwise valueB, this is a short version of the 'if' function with the\n\t**\tdifference that the result is 'obj' instead of text.\n\t**\n\t**\t? <expr> <valueA> [<valueB>]\n\t*/\n\t'_?': function (parts, data)\n\t{\n\t\tif (Template.expand(parts[1], data, 'arg'))\n\t\t\treturn Template.expand(parts[2], data, 'arg');\n\n\t\tif (parts.length > 3)\n\t\t\treturn Template.expand(parts[3], data, 'arg');\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tReturns the valueA if it is not null (or empty or zero), otherwise returns valueB.\n\t**\n\t**\t?? <valueA> <valueB>\n\t*/\n\t'_??': function (parts, data)\n\t{\n\t\tlet value = Template.expand(parts[1], data, 'arg');\n\t\tif (value) return value;\n\t\n\t\treturn Template.expand(parts[2], data, 'arg');\n\t},\n\n\t/**\n\t**\tReturns the value if the expression is true, supports 'elif' and 'else' as well. The result of this function is always text.\n\t**\n\t**\tif <expr> <value> [elif <expr> <value>] [else <value>]\n\t*/\n\t'_if': function (parts, data)\n\t{\n\t\tfor (let i = 0; i < parts.length; i += 3)\n\t\t{\n\t\t\tif (Template.expand(parts[i], data, 'arg') == 'else')\n\t\t\t\treturn Template.expand(parts[i+1], data, 'text');\n\n\t\t\tif (Template.expand(parts[i+1], data, 'arg'))\n\t\t\t\treturn Template.expand(parts[i+2], data, 'text');\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tLoads the expression value and attempts to match one case.\n\t**\n\t**\tswitch <expr> <case1> <value1> ... <caseN> <valueN> default <defvalue> \n\t*/\n\t'_switch': function (parts, data)\n\t{\n\t\tlet value = Template.expand(parts[1], data, 'arg');\n\n\t\tfor (let i = 2; i < parts.length; i += 2)\n\t\t{\n\t\t\tlet case_value = Template.expand(parts[i], data, 'arg');\n\t\t\tif (case_value == value || case_value == 'default')\n\t\t\t\treturn Template.expand(parts[i+1], data, 'text');\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tExits the current inner most loop.\n\t**\n\t**\tbreak\n\t*/\n\t'_break': function (parts, data)\n\t{\n\t\tthrow new Error('EXC_BREAK');\n\t},\n\n\t/**\n\t**\tSkips execution and continues the next cycle of the current inner most loop.\n\t**\n\t**\tcontinue\n\t*/\n\t'_continue': function (parts, data)\n\t{\n\t\tthrow new Error('EXC_CONTINUE');\n\t},\n\n\t/**\n\t**\tConstructs an array with the results of repeating the specified template for a number of times.\n\t**\n\t**\trepeat <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/\n\t'_repeat': function (parts, data)\n\t{\n\t\tif (parts.length < 3 || (parts.length & 1) != 1)\n\t\t\treturn '(`repeat`: Wrong number of parameters)';\n\n\t\tlet var_name = Template.value(parts[1], data);\n\t\tlet count = null;\n\t\tlet from = 0, to = null;\n\t\tlet step = null;\n\n\t\tfor (let i = 2; i < parts.length-1; i+=2)\n\t\t{\n\t\t\tlet value = Template.value(parts[i], data);\n\n\t\t\tswitch (value.toLowerCase())\n\t\t\t{\n\t\t\t\tcase 'from':\n\t\t\t\t\tfrom = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'to':\n\t\t\t\t\tto = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'count':\n\t\t\t\t\tcount = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'step':\n\t\t\t\t\tstep = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet tpl = parts[parts.length-1];\n\t\tlet arr = [];\n\n\t\tif (to !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = from > to ? -1 : 1;\n\n\t\t\tif (step < 0)\n\t\t\t{\n\t\t\t\tfor (let i = from; i >= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (let i = from; i <= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\n\t\t\tfor (let i = from; count > 0; count--, i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\treturn arr;\n\t},\n\n\t/**\n\t**\tRepeats the specified template for a number of times.\n\t**\n\t**\tfor <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/\n\t'_for': function (parts, data)\n\t{\n\t\tif (parts.length < 3 || (parts.length & 1) != 1)\n\t\t\treturn '(`for`: Wrong number of parameters)';\n\n\t\tlet var_name = Template.value(parts[1], data);\n\t\tlet count = null;\n\t\tlet from = 0; to = null;\n\t\tlet step = null;\n\n\t\tfor (let i = 2; i < parts.length-1; i+=2)\n\t\t{\n\t\t\tvalue = Template.value(parts[i], data);\n\n\t\t\tswitch (value.toLowerCase())\n\t\t\t{\n\t\t\t\tcase 'from':\n\t\t\t\t\tfrom = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'to':\n\t\t\t\t\tto = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'count':\n\t\t\t\t\tcount = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'step':\n\t\t\t\t\tstep = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet tpl = parts[parts.length-1];\n\n\t\tif (to !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = from > to ? -1 : 1;\n\n\t\t\tif (step < 0)\n\t\t\t{\n\t\t\t\tfor (let i = from; i >= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (let i = from; i <= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\n\t\t\tfor (let i = from; count > 0; count--, i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tWrites the specified arguments to the console.\n\t**\n\t**\techo <expr> [<expr>...]\n\t*/\n\t'_echo': function (parts, data)\n\t{\n\t\tlet s = '';\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts += Template.expand(parts[i], data, 'arg');\n\n\t\tconsole.log(s);\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tConstructs a list from the given arguments and returns it.\n\t**\n\t**\t# <expr> [<expr>...]\n\t*/\n\t'_#': function (parts, data)\n\t{\n\t\tlet s = [];\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts.push(Template.expand(parts[i], data, 'arg'));\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tConstructs a non-expanded list from the given arguments and returns it.\n\t**\n\t**\t## <expr> [<expr>...]\n\t*/\n\t'_##': function (parts, data)\n\t{\n\t\tlet s = [];\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts.push(parts[i]);\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tConstructs an associative array (dictionary) and returns it.\n\t**\n\t**\t& <name>: <expr> [<name>: <expr>...]\n\t**\t& :<name> <expr> [:<name> <expr>...]\n\t*/\n\t'_&': function (parts, data)\n\t{\n\t\treturn Template.getNamedValues (parts, data, 1, true);\n\t},\n\n\t/**\n\t**\tConstructs a non-expanded associative array (dictionary) and returns it.\n\t**\n\t**\t&& <name>: <expr> [<name>: <expr>...]\n\t**\t&& :<name> <expr> [:<name> <expr>...]\n\t*/\n\t'_&&': function (parts, data)\n\t{\n\t\treturn Template.getNamedValues (parts, data, 1, false);\n\t},\n\n\t/**\n\t**\tReturns true if the specified map contains all the specified keys. If it fails the global variable `err` will contain an error message.\n\t**\n\t**\tcontains <expr> <name> [<name>...]\n\t*/\n\t'contains': function (args, parts, data)\n\t{\n\t\tlet value = args[1];\n\n\t\tif (typeof(value) != 'object')\n\t\t{\n\t\t\tdata.err = 'Argument is not a Map';\n\t\t\treturn false;\n\t\t}\n\n\t\tlet s = '';\n\n\t\tfor (let i = 2; i < args.length; i++)\n\t\t{\n\t\t\tif (!(args[i] in value))\n\t\t\t\ts += ', '+args[i];\n\t\t}\n\n\t\tif (s != '')\n\t\t{\n\t\t\tdata.err = s.substr(1);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tReturns true if the specified map has the specified key. Returns boolean.\n\t**\n\t**\thas <name> <expr>\n\t*/\n\t'has': function (args, parts, data)\n\t{\n\t\tlet value = args[2];\n\n\t\tif (Rin.typeOf(value) != 'object')\n\t\t\treturn false;\n\n\t\treturn args[1] in value;\n\t},\n\n\t/**\n\t**\tReturns a new array/map contaning the transformed values of the array/map (evaluating the template). And just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tmap <varname> <list-expr> <template>\n\t*/\n\t'_map': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\t\tif (!list) return list;\n\n\t\tlet arrayMode = Rin.typeOf(list) == 'array' ? true : false;\n\t\tlet output = arrayMode ? [] : {};\n\t\tlet j = 0;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tif (arrayMode)\n\t\t\t\toutput.push(Template.expand(parts[3], data, 'arg'));\n\t\t\telse\n\t\t\t\toutput[i] = Template.expand(parts[3], data, 'arg');\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn output;\n\t},\n\n\t/**\n\t**\tReturns a new array/map contaning the elements where the template evaluates to non-zero. Just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tfilter <varname> <list-expr> <template>\n\t*/\n\t'_filter': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\t\tif (!list) return list;\n\n\t\tlet arrayMode = Rin.typeOf(list) == 'array' ? true : false;\n\t\tlet output = arrayMode ? [] : {};\n\t\tlet j = 0;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tif (~~Template.expand(parts[3], data, 'arg'))\n\t\t\t{\n\t\t\t\tif (arrayMode)\n\t\t\t\t\toutput.push(list[i]);\n\t\t\t\telse\n\t\t\t\t\toutput[i] = list[i];\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn output;\n\t},\n\n\t/**\n\t**\tExpands the specified template string with the given data. The sym_open and sym_close will be '{' and '}' respectively.\n\t**\tIf no data is provided, current data parameter will be used.\n\t**\n\t**\texpand <template> <data>\n\t*/\n\t'expand': function (args, parts, data)\n\t{\n\t\treturn Template.expand (Template.parseTemplate (args[1], '{', '}'), args.length == 3 ? args[2] : data);\n\t},\n\n\t/**\n\t**\tCalls a function described by the given parameter.\n\t**\n\t**\tcall <function> <args...>\n\t*/\n\t'_call': function (parts, data)\n\t{\n\t\tlet ref = Template.expand(parts[1], data, 'varref');\n\n\t\tif (!ref || typeof(ref[0][ref[1]]) != 'function')\n\t\t\tthrow new Error ('Expression is not a function: ' + Template.expand(parts[1], data, 'obj').map(i => i == null ? '.' : i).join(''));\n\n\t\tlet args = [];\n\n\t\tfor (let i = 2; i < parts.length; i++)\n\t\t\targs.push(Template.value(parts[i], data));\n\n\t\treturn ref[0][ref[1]] (...args);\n\t},\n};\n","/*\r\n**\trin/main\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = require('./alpha');\r\n\r\nRin.Rin = Rin;\r\nRin.Class = require('./class');\r\n\r\nRin.Event = require('./event');\r\nRin.EventDispatcher = require('./event-dispatcher');\r\n\r\nRin.Model = require('./model');\r\nRin.ModelList = require('./model-list');\r\n\r\nRin.Schema = require('./schema');\r\nRin.Flattenable = require('./flattenable');\r\nRin.Collection = require('./collection');\r\n\r\nRin.Template = require('./template');\r\n\r\n/* ---- */\r\nObject.assign (module.exports, Rin);\r\n","/*\r\n**\trin/router\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nconst { EventDispatcher } = require('@rsthn/rin');\r\n\r\n/*\r\n**\tThe Router is a special module that detects local URL changes (when a hash-change occurs) and\r\n**\tforwards events to the appropriate handlers.\r\n*/\r\n\r\nlet _Router = module.exports =\r\n{\r\n\tRoute: EventDispatcher.extend\r\n\t({\r\n\t\t/*\r\n\t\t**\tRegular expression for the route. This is generated from a simpler expression provided\r\n\t\t**\tin the constructor.\r\n\t\t*/\r\n\t\trouteRegex: null,\r\n\t\r\n\t\t/*\r\n\t\t**\tOriginal route string value.\r\n\t\t*/\r\n\t\tvalue: null,\r\n\t\r\n\t\t/*\r\n\t\t**\tMap with the indices and the names of each paremeter obtained from the route expression.\r\n\t\t*/\r\n\t\tparams: null,\r\n\t\r\n\t\t/*\r\n\t\t**\tArguments string obtained from the last route dispatch. Used to check if the arguments changed.\r\n\t\t*/\r\n\t\ts_args: null,\r\n\t\r\n\t\t/*\r\n\t\t**\tIndicates if the route is active because of a past positive dispatch.\r\n\t\t*/\r\n\t\tactive: false,\r\n\t\r\n\t\t/*\r\n\t\t**\tIndicates if the route is active because of a past positive dispatch.\r\n\t\t*/\r\n\t\tchanged: false,\r\n\t\r\n\t\t/*\r\n\t\t**\tConstructor of the route, the specified argument is a route expression.\r\n\t\t**\r\n\t\t**\t>> void __ctor (string route);\r\n\t\t*/\r\n\t\t__ctor: function (route)\r\n\t\t{\r\n\t\t\tthis._super.EventDispatcher.__ctor();\r\n\t\t\tthis._compileRoute (this.value = route);\r\n\t\t},\r\n\t\r\n\t\t/*\r\n\t\t**\tTransforms the specified route expression into a regular expression and a set of parameter\r\n\t\t**\tnames and stores them in the 'param' array.\r\n\t\t**\r\n\t\t**\t>> void _compileRoute (string route);\r\n\t\t*/\r\n\t\t_compileRoute: function (route)\r\n\t\t{\r\n\t\t\tthis.params = [];\r\n\t\r\n\t\t\twhile (true)\r\n\t\t\t{\r\n\t\t\t\tvar m = /:([!@A-Za-z0-9_-]+)/.exec(route);\r\n\t\t\t\tif (!m) break;\r\n\t\r\n\t\t\t\troute = route.replace(m[0], '([^/]+)');\r\n\t\t\t\tthis.params.push (m[1]);\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.routeRegex = '^' + route.replace(/##/g, '');\r\n\t\t},\r\n\t\r\n\t\t/*\r\n\t\t**\tAdds a handler to the route dispatcher. The handler can be removed later using removeHandler and\r\n\t\t**\tspecifying the same parameters. If unrouted boolean is specified the event to listen to will be\r\n\t\t**\tthe unrouted event (when the route changes and the route is not activated).\r\n\t\t**\r\n\t\t**\tvoid addHandler (handler: function, unrouted: bool);\r\n\t\t*/\r\n\t\taddHandler: function (handler, unrouted)\r\n\t\t{\r\n\t\t\tthis.addEventListener ((unrouted === true ? 'un' : '') + 'routed', handler, null);\r\n\t\t},\r\n\t\r\n\t\t/*\r\n\t\t**\tRemoves a handler from the route dispatcher.\r\n\t\t**\r\n\t\t**\tvoid removeHandler (handler: function, unrouted: bool);\r\n\t\t*/\r\n\t\tremoveHandler: function (handler, unrouted)\r\n\t\t{\r\n\t\t\tthis.removeEventListener ((unrouted === true ? 'un' : '') + 'routed', handler, null);\r\n\t\t},\r\n\t\r\n\t\t/*\r\n\t\t**\tVerifies if the specified route matches the internal route and if so dispatches a (depends on doUnroute parameter) \"routed\" or \"unrouted\" event with the\r\n\t\t**\tparameters obtained from the location to all attached handlers.\r\n\t\t**\r\n\t\t**\tvoid dispatch (route:string, doUnroute:bool);\r\n\t\t*/\r\n\t\tdispatch: function (route)\r\n\t\t{\r\n\t\t\tvar matches = route.match(this.routeRegex);\r\n\t\t\tif (!matches)\r\n\t\t\t{\r\n\t\t\t\tthis.s_args = null;\r\n\r\n\t\t\t\tif (this.active)\r\n\t\t\t\t\tthis.dispatchEvent ('unrouted', { route: this });\r\n\r\n\t\t\t\tthis.active = false;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tvar args = { route: this };\r\n\t\t\tvar str = '';\r\n\t\r\n\t\t\tfor (var i = 0; i < this.params.length; i++)\r\n\t\t\t{\r\n\t\t\t\targs[this.params[i]] = matches[i+1];\r\n\t\t\t\tstr += '_' + matches[i+1];\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.changed = str != this.s_args;\r\n\t\r\n\t\t\tthis.dispatchEvent ('routed', args);\r\n\t\t\tthis.s_args = str;\r\n\t\r\n\t\t\tthis.active = true;\r\n\t\t}\r\n\t}),\r\n\r\n\t/*\r\n\t**\tMap with route objects. The key of the map is the route and the value a handler.\r\n\t*/\r\n\troutes: { },\r\n\r\n\t/*\r\n\t**\tSorted list of routes. Smaller routes are processed first than larger ones. This array stores\r\n\t**\tonly the keys to the Router.routes map.\r\n\t*/\r\n\tsortedRoutes: [ ],\r\n\r\n\t/*\r\n\t**\tIndicates the number of times the onLocationChanged handler should ignore the hash change event.\r\n\t*/\r\n\tignoreHashChangeEvent: 0,\r\n\r\n\t/*\r\n\t**\tCurrent location.\r\n\t*/\r\n\tlocation: '',\r\n\r\n\t/*\r\n\t**\tCurrent location as an array of elements (obtained by splitting the location by slash).\r\n\t*/\r\n\targs: [],\r\n\r\n\t/*\r\n\t**\tInitializes the router global instance.\r\n\t**\r\n\t**\t>> void init ();\r\n\t*/\r\n\tinit: function ()\r\n\t{\r\n\t\tif (this.alreadyAttached)\r\n\t\t\treturn;\r\n\r\n\t\tthis.alreadyAttached = true;\r\n\r\n\t\tif ('onhashchange' in globalThis)\r\n\t\t\tglobalThis.onhashchange = this.onLocationChanged.bind(this);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRefreshes the current route by forcing a hashchange event.\r\n\t**\r\n\t**\t>> void refresh ();\r\n\t*/\r\n\trefresh: function ()\r\n\t{\r\n\t\tthis.onLocationChanged();\r\n\t},\r\n\r\n\t/*\r\n\t**\tChanges the current location and optionally prevents a trigger of the hashchange event.\r\n\t**\r\n\t**\t>> void setRoute (string route[, bool silent]);\r\n\t*/\r\n\tsetRoute: function (route, silent)\r\n\t{\r\n\t\tvar location = this.realLocation (route);\r\n\t\tif (location == this.location) return;\r\n\r\n\t\tif (silent) this.ignoreHashChangeEvent++;\r\n\t\tglobalThis.location.hash = location;\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds the specified route to the routing map.\r\n\t**\r\n\t**\t>> void addRoute (string route, function onRoute);\r\n\t**\t>> void addRoute (string route, function onRoute, function onUnroute);\r\n\t*/\r\n\taddRoute: function (route, onRoute, onUnroute)\r\n\t{\r\n\t\tif (!this.routes[route])\r\n\t\t{\r\n\t\t\tthis.routes[route] = new this.Route (route);\r\n\t\t\tthis.sortedRoutes.push (route);\r\n\r\n\t\t\tthis.sortedRoutes.sort ((a, b) => {\r\n\t\t\t\treturn this.routes[a].routeRegex.length - this.routes[b].routeRegex.length;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (onUnroute !== undefined)\r\n\t\t{\r\n\t\t\tthis.routes[route].addHandler (onRoute, false);\r\n\t\t\tthis.routes[route].addHandler (onUnroute, true);\r\n\t\t}\r\n\t\telse\r\n\t\t\tthis.routes[route].addHandler (onRoute, false);\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds the specified routes to the routing map. The routes map should contain the route expression\r\n\t**\tin the key of the map and a handler function in the value.\r\n\t**\r\n\t**\t>> void addRoutes (routes: map);\r\n\t*/\r\n\taddRoutes: function (routes)\r\n\t{\r\n\t\tfor (var i in routes)\r\n\t\t{\r\n\t\t\tif (!this.routes[i])\r\n\t\t\t{\r\n\t\t\t\tthis.routes[i] = new this.Route (i);\r\n\t\t\t\tthis.sortedRoutes.push (i);\r\n\t\t\t}\r\n\r\n\t\t\tthis.routes[i].addHandler (routes[i], false);\r\n\t\t}\r\n\r\n\t\tthis.sortedRoutes.sort ((a, b) => {\r\n\t\t\treturn this.routes[a].routeRegex.length - this.routes[b].routeRegex.length;\r\n\t\t});\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the specified route from the routing map.\r\n\t**\r\n\t**\t>> void removeRoute (string route, function onRoute);\r\n\t**\t>> void removeRoute (string route, function onRoute, function onUnroute);\r\n\t*/\r\n\tremoveRoute: function (route, onRoute, onUnroute)\r\n\t{\r\n\t\tif (!this.routes[route]) return;\r\n\r\n\t\tif (onUnroute !== undefined)\r\n\t\t{\r\n\t\t\tthis.routes[route].removeHandler (onRoute, false);\r\n\t\t\tthis.routes[route].removeHandler (onUnroute, true);\r\n\t\t}\r\n\t\telse\r\n\t\t\tthis.routes[route].removeHandler (onRoute);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the specified routes from the routing map. The routes map should contain the route\r\n\t**\texpression in the key of the map and a handler function in the value.\r\n\t**\r\n\t**\t>> void removeRoutes (routes: map);\r\n\t*/\r\n\tremoveRoutes: function (routes)\r\n\t{\r\n\t\tfor (var i in routes)\r\n\t\t{\r\n\t\t\tif (!this.routes[i]) continue;\r\n\r\n\t\t\tthis.routes[i].removeHandler (routes[i]);\r\n\t\t}\r\n\t},\r\n\r\n\t/*\r\n\t**\tGiven a formatted location and a previous one it will return the correct real location.\r\n\t**\r\n\t**\tstring realLocation (cLocation: string, pLocation: string);\r\n\t*/\r\n\trealLocation: function (cLocation, pLocation)\r\n\t{\r\n\t\tif (!pLocation) pLocation = this.location;\r\n\t\tif (!pLocation) pLocation = ' ';\r\n\r\n\t\tvar state = 0, i = 0, j = 0, k;\r\n\t\tvar rLocation = '';\r\n\r\n\t\twhile (state != -1 && i < cLocation.length && j < pLocation.length)\r\n\t\t{\r\n\t\t\tswitch (state)\r\n\t\t\t{\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tif (cLocation.substr(i++, 1) == '*')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstate = 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (cLocation.substr(i-1, 1) != pLocation.substr(j++, 1))\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trLocation += cLocation.substr(i-1);\r\n\t\t\t\t\t\tstate = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trLocation += pLocation.substr(j-1, 1);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tif (cLocation.substr(i, 1) == '*')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tstate = 3;\r\n\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tstate = 2;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tk = pLocation.indexOf(cLocation.substr(i, 1), j);\r\n\t\t\t\t\tif (k == -1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trLocation += pLocation.substr(j) + cLocation.substr(i);\r\n\t\t\t\t\t\tstate = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trLocation += pLocation.substr(j, k-j);\r\n\r\n\t\t\t\t\tstate = 0;\r\n\t\t\t\t\tj = k;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tk = pLocation.lastIndexOf(cLocation.substr(i, 1));\r\n\t\t\t\t\tif (k == -1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trLocation += cLocation.substr(i);\r\n\t\t\t\t\t\tstate = -1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trLocation += pLocation.substr(j, k-j);\r\n\r\n\t\t\t\t\tstate = 0;\r\n\t\t\t\t\tj = k;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (state != -1)\r\n\t\t\trLocation += cLocation.substr(i);\r\n\r\n\t\treturn rLocation.trim();\r\n\t},\r\n\r\n\t/*\r\n\t**\tEvent handler for when the location hash changes.\r\n\t*/\r\n\tonLocationChanged: function ()\r\n\t{\r\n\t\tvar cLocation = location.hash.substr(1);\r\n\t\tvar rLocation = this.realLocation (cLocation);\r\n\r\n\t\tif (cLocation != rLocation)\r\n\t\t{\r\n\t\t\tglobalThis.location.replace('#' + rLocation);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.location = cLocation;\r\n\t\tthis.args = this.location.split ('/');\r\n\r\n\t\tif (this.ignoreHashChangeEvent > 0)\r\n\t\t{\r\n\t\t\tthis.ignoreHashChangeEvent--;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor (var i = 0; i < this.sortedRoutes.length; i++)\r\n\t\t\tthis.routes[this.sortedRoutes[i]].dispatch (this.location);\r\n\t},\r\n\r\n\t/*\r\n\t**\tNavigates to the given hash-based URL.\r\n\t*/\r\n\tnavigate: function (location, replace=false)\r\n\t{\r\n\t\tlocation = this.realLocation(location);\r\n\r\n\t\tif (globalThis.location.hash == '#'+location)\r\n\t\t{\r\n\t\t\tthis.refresh();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (replace)\r\n\t\t\tglobalThis.location.replace('#'+location);\r\n\t\telse\r\n\t\t\tglobalThis.location.hash = location;\r\n\t}\r\n};\r\n\r\n_Router.init();\r\n","/*\r\n**\trin/element\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nconst { Rin, Model, Template } = require('@rsthn/rin');\r\n\r\n/**\r\n**\tMap containing the original prototypes for all registered elements.\r\n*/\r\nconst elementPrototypes = { };\r\n\r\n/**\r\n**\tMap containing the final classes for all registered elements.\r\n*/\r\nconst elementClasses = { };\r\n\r\n\r\n/*\r\n**\tBase class for custom elements.\r\n*/\r\n\r\nconst Element = module.exports = \r\n{\r\n\t/**\r\n\t**\tInternal element ID. Added as namespace to model events. Ensures that certain model events are run locally only, not affecting other event handlers.\r\n\t*/\r\n\teid: null,\r\n\r\n\t/**\r\n\t**\tIndicates if the element is a root element, that is, the target element to attach child elements having data-ref attribute.\r\n\t*/\r\n\tisRoot: true,\r\n\r\n\t/**\r\n\t**\tIndicates if the element is ready (all children have been initialized).\r\n\t*/\r\n\tisReady: false,\r\n\r\n\t/**\r\n\t**\tAll children elements having data-ref are added to this map (and to the element itself).\r\n\t*/\r\n\trefs: null,\r\n\r\n\t/**\r\n\t**\tModel type (class) for the element's model.\r\n\t*/\r\n\tmodelt: Model,\r\n\r\n\t/**\r\n\t**\tData model related to the element.\r\n\t*/\r\n\tmodel: null,\r\n\r\n\t/**\r\n\t**\tEvents map.\r\n\t*/\r\n\tevents:\r\n\t{\r\n\t\t'click [data-action]': function(evt) {\r\n\t\t\tif (evt.source.dataset.action in this)\r\n\t\t\t\tthis[evt.source.dataset.action] (evt.source.dataset, evt);\r\n\t\t\telse\r\n\t\t\t\tevt.continuePropagation = true;\r\n\t\t},\r\n\r\n\t\t'keyup(13) input[data-enter]': function(evt) {\r\n\t\t\tif (evt.source.dataset.enter in this)\r\n\t\t\t\tthis[evt.source.dataset.enter] (evt.source.dataset, evt);\r\n\t\t\telse\r\n\t\t\t\tevt.continuePropagation = true;\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t**\tElement constructor.\r\n\t*/\r\n\t__ctor: function()\r\n\t{\r\n\t\tthis._list_watch = [];\r\n\t\tthis._list_visible = [];\r\n\t\tthis._list_property = [];\r\n\r\n\t\tthis.style.display = 'block';\r\n\r\n\t\tthis.refs = { };\r\n\t\tthis.eid = Math.random().toString().substr(2);\r\n\r\n\t\tif (this.model != null)\r\n\t\t{\r\n\t\t\tlet tmp = this.model;\r\n\t\t\tthis.model = null;\r\n\t\t\tthis.setModel (tmp);\r\n\t\t}\r\n\r\n\t\tthis._mutationObserver = true;\r\n\t\tthis.init();\r\n\r\n\t\tObject.keys(this._super).reverse().forEach(i =>\r\n\t\t{\r\n\t\t\tif ('init' in this._super[i])\r\n\t\t\t\tthis._super[i].init();\r\n\t\t});\r\n\r\n\t\tif (this.events)\r\n\t\t\tthis.bindEvents (this.events);\r\n\r\n\t\tconst ready = () =>\r\n\t\t{\r\n\t\t\tthis.ready();\r\n\t\t\tthis.isReady = true;\r\n\r\n\t\t\tif ('model' in this.dataset)\r\n\t\t\t{\r\n\t\t\t\tlet tmp = this.dataset.model.split('.');\r\n\t\t\t\tlet ref = global;\r\n\r\n\t\t\t\twhile (ref != null && tmp.length != 0)\r\n\t\t\t\t\tref = ref[tmp.shift()];\r\n\r\n\t\t\t\tif (ref) this.setModel(ref);\r\n\t\t\t}\r\n\r\n\t\t\tObject.keys(this._super).reverse().forEach(i =>\r\n\t\t\t{\r\n\t\t\t\tif ('ready' in this._super[i])\r\n\t\t\t\t\tthis._super[i].ready();\r\n\t\t\t});\r\n\r\n\t\t\tthis.collectWatchers();\r\n\r\n\t\t\tlet root = this.findCustomParent(this);\r\n\t\t\tif (root && root._mutationHandler)\r\n\t\t\t\troot._mutationHandler();\r\n\t\t};\r\n\r\n\t\tlet timeout = null;\r\n\r\n\t\tthis._mutationHandler = () =>\r\n\t\t{\r\n\t\t\tif (this.childNodes.length == 0)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tthis.querySelectorAll('[data-_pending=true]').forEach(i =>\r\n\t\t\t{\r\n\t\t\t\tlet root = this.findRoot(i.parentElement);\r\n\t\t\t\tif (root !== this) return;\r\n\r\n\t\t\t\ti.connectReference(this);\r\n\t\t\t});\r\n\r\n\t\t\tlet is_ready = true;\r\n\r\n\t\t\tthis.querySelectorAll('[data-_custom]').forEach(i =>\r\n\t\t\t{\r\n\t\t\t\tlet root = this.findCustomParent(i);\r\n\t\t\t\tif (root !== this) return;\r\n\r\n\t\t\t\tif (!i.isReady) is_ready = false;\r\n\t\t\t});\r\n\r\n\t\t\tif (!is_ready) return;\r\n\r\n\t\t\tif (timeout) clearTimeout(timeout);\r\n\r\n\t\t\ttimeout = setTimeout(() =>\r\n\t\t\t{\r\n\t\t\t\ttimeout = null;\r\n\r\n\t\t\t\tlet is_ready = true;\r\n\r\n\t\t\t\tthis.querySelectorAll('[data-_custom]').forEach(i =>\r\n\t\t\t\t{\r\n\t\t\t\t\tlet root = this.findCustomParent(i);\r\n\t\t\t\t\tif (root !== this) return;\r\n\t\r\n\t\t\t\t\tif (!i.isReady) is_ready = false;\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\tif (!is_ready) return;\r\n\r\n\t\t\t\tfor (let elem of this.querySelectorAll('[data-ref]'))\r\n\t\t\t\t{\r\n\t\t\t\t\tif (elem.dataset._linked != 'true')\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis[elem.dataset.ref] = elem;\r\n\t\t\t\t\t\tthis.refs[elem.dataset.ref] = elem;\r\n\r\n\t\t\t\t\t\telem.dataset._linked = 'true';\r\n\t\t\t\t\t\telem.root = this;\r\n\r\n\t\t\t\t\t\tthis.onRefAdded (elem.dataset.ref);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._mutationHandler = null;\r\n\r\n\t\t\t\tthis._mutationObserver.disconnect();\r\n\t\t\t\tthis._mutationObserver = null;\r\n\r\n\t\t\t\tready();\r\n\t\t\t},\r\n\t\t\t50);\r\n\t\t};\r\n\r\n\t\tthis._mutationObserver = new MutationObserver (this._mutationHandler);\r\n\t\tthis._mutationObserver.observe(this, { attributes: false, childList: true, subtree: false });\r\n\r\n\t\tthis._mutationHandler();\r\n\t},\r\n\r\n\t/**\r\n\t**\tInitializes the element. Called after construction of the instance.\r\n\t**\r\n\t**\t>> void init();\r\n\t*/\r\n\tinit: function()\r\n\t{\r\n\t},\r\n\r\n\t/**\r\n\t**\tExecuted when the children of the element are ready.\r\n\t**\r\n\t**\t>> void ready();\r\n\t*/\r\n\tready: function()\r\n\t{\r\n\t},\r\n\r\n\t/**\r\n\t**\tReturns the root of the element (that is, the 'root' property). If not set it will attempt to find the root first.\r\n\t**\r\n\t**\t>> Element getRoot ();\r\n\t*/\r\n\tgetRoot: function()\r\n\t{\r\n\t\treturn this.root ? this.root : (this.root = this.findRoot());\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the model of the element and executes the modelChanged event handler.\r\n\t**\r\n\t**\t>> Element setModel (Model model, [bool update=true]);\r\n\t*/\r\n\tsetModel: function (model, update)\r\n\t{\r\n\t\tif (!model) return this;\r\n\r\n\t\tmodel = Rin.ensureTypeOf(this.modelt, model);\r\n\r\n\t\tif (this.model != null)\r\n\t\t{\r\n\t\t\tthis.model.removeEventListener (this.eid+':modelChanged', this.onModelPreChanged, this);\r\n\t\t\tthis.model.removeEventListener (this.eid+':propertyChanging', this.onModelPropertyChanging, this);\r\n\t\t\tthis.model.removeEventListener (this.eid+':propertyChanged', this.onModelPropertyPreChanged, this);\r\n\t\t\tthis.model.removeEventListener (this.eid+':propertyRemoved', this.onModelPropertyRemoved, this);\r\n\t\t}\r\n\r\n\t\tthis.model = model;\r\n\r\n\t\tthis.model.addEventListener (this.eid+':modelChanged', this.onModelPreChanged, this);\r\n\t\tthis.model.addEventListener (this.eid+':propertyChanging', this.onModelPropertyChanging, this);\r\n\t\tthis.model.addEventListener (this.eid+':propertyChanged', this.onModelPropertyPreChanged, this);\r\n\t\tthis.model.addEventListener (this.eid+':propertyRemoved', this.onModelPropertyRemoved, this);\r\n\r\n\t\tif (update !== false)\r\n\t\t\tthis.model.setNamespace(this.eid).update(true).setNamespace(null);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tReturns the model of the element. This is a dummy function returning the public attribute \"model\" of this class.\r\n\t**\r\n\t**\t>> Model getModel();\r\n\t*/\r\n\tgetModel: function ()\r\n\t{\r\n\t\treturn this.model;\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds one or more CSS classes (separated by space) to the element.\r\n\t**\r\n\t**\t>> void addClass (string classString);\r\n\t*/\r\n\taddClass: function (classString)\r\n\t{\r\n\t\tclassString.split(' ').forEach(i => this.classList.add(i.trim()));\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves one or more CSS classes (separated by space) to the element.\r\n\t**\r\n\t**\t>> void removeClass (string classString);\r\n\t*/\r\n\tremoveClass: function (classString)\r\n\t{\r\n\t\tclassString.split(' ').forEach(i => this.classList.remove(i.trim()));\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds one or more style properties.\r\n\t**\r\n\t**\t>> void setStyle (string styleString);\r\n\t*/\r\n\tsetStyle: function (styleString)\r\n\t{\r\n\t\tif (!styleString) return this;\r\n\r\n\t\tstyleString.split(';').forEach(i => {\r\n\t\t\tlet j = (i = i.trim()).indexOf(':');\r\n\t\t\tif (j == -1) return;\r\n\r\n\t\t\tlet name = i.substr(0, j).trim();\r\n\t\t\tfor (let k = name.indexOf('-'); k != -1; k = name.indexOf('-')) {\r\n\t\t\t\tname = name.substr(0, k) + name.substr(k+1, 1).toUpperCase() + name.substr(k+2);\r\n\t\t\t}\r\n\r\n\t\t\tthis.style[name] = i.substr(j+1).trim();\r\n\t\t});\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the width of the element.\r\n\t**\r\n\t**\t>> float getWidth([elem]);\r\n\t*/\r\n\tgetWidth: function (elem)\r\n\t{\r\n\t\treturn (elem || this).getBoundingClientRect().width;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the height of the element.\r\n\t**\r\n\t**\t>> float getHeight([elem]);\r\n\t*/\r\n\tgetHeight: function (elem)\r\n\t{\r\n\t\treturn (elem || this).getBoundingClientRect().height;\r\n\t},\r\n\r\n\t/**\r\n\t**\tBinds all events in the specified map to the element, the events map can have one of the following forms:\r\n\t**\r\n\t**\t\t\"click .button\": \"doSomething\",\t\t(Delegated Event)\r\n\t**\t\t\"click .button\": function() { },\t(Delegated Event)\r\n\t**\t\t\"myevt @this\": \"...\",\t\t\t\t(Self Event)\r\n\t**\t\t\"myevt\": \"...\",\t\t\t\t\t\t(Element Event)\r\n\t**\t\t\"myevt @objName\": \"...\",\t\t\t(EventDispatcher Event)\r\n\t**\t\t\"#propname\": \"...\",\t\t\t\t\t(Property Changed Event)\r\n\t**\t\t\"keyup(10) .input\": \"...\"\t\t\t(Delegated Event with Parameters)\r\n\t**\r\n\t**\t>> Element bindEvents (object events);\r\n\t*/\r\n\tbindEvents: function (events)\r\n\t{\r\n\t\tfor (var evtstr in events)\r\n\t\t{\r\n\t\t\tlet hdl = events[evtstr];\r\n\r\n\t\t\tif (Rin.typeOf(hdl) == 'string')\r\n\t\t\t\thdl = this[hdl];\r\n\r\n\t\t\thdl = hdl.bind(this);\r\n\r\n\t\t\tvar i = evtstr.indexOf(' ');\r\n\r\n\t\t\tvar name = i == -1 ? evtstr : evtstr.substr(0, i);\r\n\t\t\tvar selector = i == -1 ? '' : evtstr.substr(i + 1);\r\n\r\n\t\t\tlet args = null;\r\n\r\n\t\t\tvar j = name.indexOf('(');\r\n\t\t\tif (j != -1)\r\n\t\t\t{\r\n\t\t\t\targs = name.substr(j+1, name.length-j-2).split(',');\r\n\t\t\t\tname = name.substr(0, j);\r\n\t\t\t}\r\n\r\n\t\t\tif (selector.substr(0,1) == '@')\r\n\t\t\t{\r\n\t\t\t\tif (selector.substr(1) != 'this')\r\n\t\t\t\t{\r\n\t\t\t\t\tthis[selector.substr(1)].addEventListener(name, hdl);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tselector = this;\r\n\t\t\t}\r\n\r\n\t\t\tif (name.substr(0, 1) == '#')\r\n\t\t\t{\r\n\t\t\t\tthis.listen('propertyChanged.'+name.substr(1), this, hdl);\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tif (args != null)\r\n\t\t\t{\r\n\t\t\t\tswitch (name)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase 'keyup': case 'keydown':\r\n\t\t\t\t\t\tthis.listen (name, selector, function (evt)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (Rin.indexOf(args, evt.keyCode.toString()) != -1)\r\n\t\t\t\t\t\t\t\treturn hdl (evt, args);\r\n\r\n\t\t\t\t\t\t\tevt.continuePropagation = true;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.listen (name, selector, hdl);\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tExecutes the underlying event handler given an event and a selector. Called internally by listen().\r\n\t**\r\n\t**\t>> void _eventHandler (event evt, string selector, function handler);\r\n\t*/\r\n\t_eventHandler: function (evt, selector, handler)\r\n\t{\r\n\t\tif (evt.continuePropagation === false)\r\n\t\t\treturn;\r\n\r\n\t\tevt.continuePropagation = true;\r\n\t\tevt.source = evt.target;\r\n\r\n\t\tif (selector && selector instanceof HTMLElement)\r\n\t\t{\r\n\t\t\tif (evt.source === selector)\r\n\t\t\t{\r\n\t\t\t\tevt.continuePropagation = false;\r\n\t\t\t\thandler.call (this, evt, evt.detail);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (selector && selector != '*')\r\n\t\t{\r\n\t\t\tlet elems = this.querySelectorAll(selector);\r\n\r\n\t\t\twhile (evt.source !== this)\r\n\t\t\t{\r\n\t\t\t\tlet i = Rin.indexOf (elems, evt.source, true);\r\n\t\t\t\tif (i !== -1)\r\n\t\t\t\t{\r\n\t\t\t\t\tevt.continuePropagation = false;\r\n\t\t\t\t\thandler.call (this, evt, evt.detail);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tevt.source = evt.source.parentElement;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tevt.continuePropagation = false;\r\n\t\t\thandler.call (this, evt, evt.detail);\r\n\t\t}\r\n\r\n\t\tif (evt.continuePropagation === false)\r\n\t\t{\r\n\t\t\tevt.preventDefault();\r\n\t\t\tevt.stopPropagation();\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t**\tListens for an event for elements matching the specified selector, returns an object with a single method remove() used\r\n\t**\tto remove the listener when it is no longer needed.\r\n\t**\r\n\t**\t>> object listen (string eventName, string selector, function handler);\r\n\t**\t>> object listen (string eventName, function handler);\r\n\t*/\r\n\tlisten: function (eventName, selector, handler)\r\n\t{\r\n\t\tlet eventCatcher = false;\r\n\r\n\t\tif (Rin.typeOf(selector) == 'function')\r\n\t\t{\r\n\t\t\thandler = selector;\r\n\t\t\tselector = null;\r\n\t\t}\r\n\r\n\t\tif (eventName[eventName.length-1] == '!')\r\n\t\t{\r\n\t\t\teventName = eventName.substr(0, eventName.length-1);\r\n\t\t\teventCatcher = true;\r\n\t\t}\r\n\r\n\t\tlet callback0 = null;\r\n\t\tlet callback1 = null;\r\n\t\tlet self = this;\r\n\r\n\t\tthis.addEventListener (eventName, callback0 = (evt) =>\r\n\t\t{\r\n\t\t\tif (evt.continuePropagation === false)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (!evt.firstCapture)\r\n\t\t\t{\r\n\t\t\t\tevt.firstCapture = this;\r\n\t\t\t\tevt.firstCaptureCount = 0;\r\n\t\t\t\tevt.queue = [];\r\n\t\t\t}\r\n\r\n\t\t\tif (evt.firstCapture === this)\r\n\t\t\t\tevt.firstCaptureCount++;\r\n\r\n\t\t\tif (eventCatcher == true)\r\n\t\t\t{\r\n\t\t\t\tevt.queue.push([this, selector, handler]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t//VIOLET: Possibly need a configuration option for this behavior.\r\n\t\t\t//let root = this.findRoot (evt.target);\r\n\t\t\t//if (root !== this) return;\r\n\r\n\t\t\t//this._eventHandler(evt, selector, handler);\r\n\t\t},\r\n\t\ttrue);\r\n\r\n\t\tthis.addEventListener (eventName, callback1 = (evt) =>\r\n\t\t{\r\n\t\t\tif (evt.continuePropagation === false)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif (eventCatcher != true)\r\n\t\t\t\tthis._eventHandler(evt, selector, handler);\r\n\r\n\t\t\tif (evt.firstCapture === this && evt.continuePropagation !== false)\r\n\t\t\t{\r\n\t\t\t\tif (--evt.firstCaptureCount == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\twhile (evt.queue.length)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet q = evt.queue.pop();\r\n\t\t\t\t\t\tq[0]._eventHandler(evt, q[1], q[2]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tevt.continuePropagation = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tfalse);\r\n\r\n\t\treturn {\r\n\t\t\tremoved: false,\r\n\t\t\tremove: function() {\r\n\t\t\t\tif (this.removed) return;\r\n\t\t\t\tthis.removed = true;\r\n\t\t\t\tself.removeEventListener(eventName, callback0, true);\r\n\t\t\t\tself.removeEventListener(eventName, callback1, false);\r\n\t\t\t}\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t**\tDispatches a new event with the specified name and the given arguments.\r\n\t**\r\n\t**\t>> void dispatch (string eventName, object args, bool bubbles=true);\r\n\t*/\r\n\tdispatch: function (eventName, args=null, bubbles=true)\r\n\t{\r\n\t\tthis.dispatchEvent (new CustomEvent (eventName, { bubbles: bubbles, detail: args }));\r\n\t},\r\n\r\n\t/**\r\n\t**\tDispatches a new event on the specified element with the given name and arguments.\r\n\t**\r\n\t**\t>> void dispatchOn (HTMLElement elem, string eventName, object args, bool bubbles=true);\r\n\t*/\r\n\tdispatchOn: function (elem, eventName, args=null, bubbles=true)\r\n\t{\r\n\t\telem.dispatchEvent (new CustomEvent (eventName, { bubbles: bubbles, detail: args }));\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the innerHTML property of the element and runs some post set-content tasks.\r\n\t**\r\n\t**\t>> void setInnerHTML (value);\r\n\t*/\r\n\tsetInnerHTML: function (value)\r\n\t{\r\n\t\tif (this._mutationObserver == null)\r\n\t\t{\r\n\t\t\tlet timeout = null;\r\n\r\n\t\t\tthis._mutationHandler = () =>\r\n\t\t\t{\r\n\t\t\t\tif (this.childNodes.length == 0)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tlet is_ready = true;\r\n\r\n\t\t\t\tthis.querySelectorAll('[data-_custom]').forEach(i =>\r\n\t\t\t\t{\r\n\t\t\t\t\tlet root = this.findCustomParent(i);\r\n\t\t\t\t\tif (root !== this) return;\r\n\r\n\t\t\t\t\tif (!i.isReady) is_ready = false;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (!is_ready) return;\r\n\r\n\t\t\t\tif (timeout) clearTimeout(timeout);\r\n\r\n\t\t\t\ttimeout = setTimeout(() =>\r\n\t\t\t\t{\r\n\t\t\t\t\ttimeout = null;\r\n\r\n\t\t\t\t\tlet is_ready = true;\r\n\r\n\t\t\t\t\tthis.querySelectorAll('[data-_custom]').forEach(i =>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlet root = this.findCustomParent(i);\r\n\t\t\t\t\t\tif (root !== this) return;\r\n\r\n\t\t\t\t\t\tif (!i.isReady) is_ready = false;\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tif (!is_ready) return;\r\n\r\n\t\t\t\t\tthis._mutationHandler = null;\r\n\r\n\t\t\t\t\tthis._mutationObserver.disconnect();\r\n\t\t\t\t\tthis._mutationObserver = null;\r\n\r\n\t\t\t\t\tthis.collectWatchers();\r\n\t\t\t\t},\r\n\t\t\t\t50);\r\n\t\t\t};\r\n\r\n\t\t\tthis._mutationObserver = new MutationObserver (this._mutationHandler);\r\n\t\t\tthis._mutationObserver.observe(this, { attributes: false, childList: true, subtree: false });\r\n\t\t}\r\n\r\n\t\tthis.innerHTML = value;\r\n\t},\r\n\r\n\t/**\r\n\t**\tCollects all watchers (data-watch, data-visible, data-property), that depend on the model, should be invoked when the structure\r\n\t**\tof the element changed (added/removed children). This is automatically called when the setInnerHTML method is called.\r\n\t**\r\n\t**\tNote that for 3rd party libs that add children to this element (which could probably have a watcher) will possibly result in\r\n\t**\tduplication of the added elements when compiling the innerHTML template. To prevent this add the 'pseudo' CSS class to any\r\n\t**\telement that should not be added to the HTML template.\r\n\t**\r\n\t**\t>> void collectWatchers ();\r\n\t*/\r\n\tcollectWatchers: function ()\r\n\t{\r\n\t\tlet self = this;\r\n\t\tlet modified = false;\r\n\t\tlet list;\r\n\r\n\t\tlet _list_watch_length = this._list_watch.length;\r\n\t\tlet _list_visible_length = this._list_visible.length;\r\n\t\tlet _list_property_length = this._list_property.length;\r\n\r\n\t\t/* *** */\r\n\t\tlist = this.querySelectorAll('[data-watch]');\r\n\t\tfor (let i = 0; i < list.length; i++)\r\n\t\t{\r\n\t\t\tfor (let j of list[i].querySelectorAll('.pseudo'))\r\n\t\t\t\tj.remove();\r\n\r\n\t\t\tlist[i]._template = Template.compile(list[i].innerHTML);\r\n\t\t\tlist[i]._watch = new RegExp(\"^(\" + list[i].dataset.watch + \")$\");\r\n\t\t\tlist[i].innerHTML = '';\r\n\r\n\t\t\tlist[i].removeAttribute('data-watch');\r\n\t\t\tthis._list_watch.push(list[i]);\r\n\t\t}\r\n\r\n\t\tif ('selfWatch' in this.dataset)\r\n\t\t{\r\n\t\t\tfor (let j of this.querySelectorAll('.pseudo'))\r\n\t\t\t\tj.remove();\r\n\r\n\t\t\tthis._template = Template.compile(this.innerHTML);\r\n\t\t\tthis._watch = new RegExp(\"^(\" + this.dataset.selfWatch + \")$\");\r\n\t\t\tthis.innerHTML = '';\r\n\r\n\t\t\tthis.removeAttribute('data-self-watch');\r\n\t\t\tthis._list_watch.push(this);\r\n\t\t}\r\n\r\n\t\t/* *** */\r\n\t\tlist = this.querySelectorAll('[data-visible]');\r\n\t\tfor (let i = 0; i < list.length; i++)\r\n\t\t{\r\n\t\t\tlist[i]._visible = Template.compile(list[i].dataset.visible);\r\n\r\n\t\t\tlist[i].removeAttribute('data-visible');\r\n\t\t\tthis._list_visible.push(list[i]);\r\n\t\t}\r\n\r\n\t\tif ('selfVisible' in this.dataset)\r\n\t\t{\r\n\t\t\tthis._visible = Template.compile(this.dataset.selfVisible);\r\n\r\n\t\t\tthis.removeAttribute('data-self-visible');\r\n\t\t\tthis._list_visible.push(this);\r\n\t\t}\r\n\r\n\t\t/* *** */\r\n\t\tlist = this.querySelectorAll('[data-property]');\r\n\t\tfor (let i = 0; i < list.length; i++)\r\n\t\t{\r\n\t\t\tlist[i].onchange = list[i].onblur = function()\r\n\t\t\t{\r\n\t\t\t\tswitch (this.type)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase 'checkbox':\r\n\t\t\t\t\t\tself.getModel().set(this.name, this.checked ? '1' : '0');\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'field':\r\n\t\t\t\t\t\tself.getModel().set(this.name, this.getValue());\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tself.getModel().set(this.name, this.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif (list[i].tagName == 'SELECT')\r\n\t\t\t{\r\n\t\t\t\tlist[i].onmouseup = function()\r\n\t\t\t\t{\r\n\t\t\t\t\tself.getModel().set(this.name, this.value);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tlist[i].name = list[i].dataset.property;\r\n\r\n\t\t\tlist[i].removeAttribute('data-property');\r\n\t\t\tthis._list_property.push(list[i]);\r\n\t\t}\r\n\r\n\t\tif ('selfProperty' in this.dataset)\r\n\t\t{\r\n\t\t\tthis.onchange = this.onblur = function()\r\n\t\t\t{\r\n\t\t\t\tswitch (this.type)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase 'checkbox':\r\n\t\t\t\t\t\tself.getModel().set(this.name, this.checked ? '1' : '0');\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'field':\r\n\t\t\t\t\t\tself.getModel().set(this.name, this.getValue());\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tself.getModel().set(this.name, this.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tif (this.tagName == 'SELECT')\r\n\t\t\t{\r\n\t\t\t\tthis.onmouseup = function()\r\n\t\t\t\t{\r\n\t\t\t\t\tself.getModel().set(this.name, this.value);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tthis.name = this.dataset.selfProperty;\r\n\r\n\t\t\tthis.removeAttribute('data-self-property');\r\n\t\t\tthis._list_property.push(this);\r\n\t\t}\r\n\r\n\t\t/* *** */\r\n\t\tthis._list_watch = this._list_watch.filter(i => i.parentElement != null);\r\n\t\tif (_list_watch_length != this._list_watch.length) modified = true;\r\n\r\n\t\tthis._list_visible = this._list_visible.filter(i => i.parentElement != null);\r\n\t\tif (_list_visible_length != this._list_visible.length) modified = true;\r\n\r\n\t\tthis._list_property = this._list_property.filter(i => i.parentElement != null);\r\n\t\tif (_list_property_length != this._list_property.length) modified = true;\r\n\r\n\t\tif (this.model != null && modified)\r\n\t\t\tthis.model.setNamespace(this.eid).update(true).setNamespace(null);\r\n\t},\r\n\r\n\t/**\r\n\t**\tExecuted when the element is created and yet not attached to the DOM tree.\r\n\t**\r\n\t**\t>> void onCreated ();\r\n\t*/\r\n\tonCreated: function()\r\n\t{\r\n\t},\r\n\r\n\t/**\r\n\t**\tExecuted when the element is attached to the DOM tree.\r\n\t**\r\n\t**\t>> void onConnected ();\r\n\t*/\r\n\tonConnected: function()\r\n\t{\r\n\t},\r\n\r\n\t/**\r\n\t**\tExecuted when the element is no longer a part of the DOM tree.\r\n\t**\r\n\t**\t>> void onDisconnected ();\r\n\t*/\r\n\tonDisconnected: function()\r\n\t{\r\n\t},\r\n\r\n\t/**\r\n\t**\tExecuted on the root element when a child element has data-ref attribute and it was added to the root.\r\n\t**\r\n\t**\t>> void onRefAdded (string name);\r\n\t*/\r\n\tonRefAdded: function (name)\r\n\t{\r\n\t},\r\n\r\n\t/**\r\n\t**\tExecuted on the root element when a child element has data-ref attribute and it was removed from the root.\r\n\t**\r\n\t**\t>> void onRefRemoved (string name);\r\n\t*/\r\n\tonRefRemoved: function (name)\r\n\t{\r\n\t},\r\n\r\n\t/**\r\n\t**\tEvent handler invoked when the model has changed, executed before onModelChanged() to update internal dependencies,\r\n\t**\tshould not be overriden or elements watching the model will not be updated.\r\n\t**\r\n\t**\t>> void onModelPreChanged (evt, args);\r\n\t*/\r\n\tonModelPreChanged: function (evt, args)\r\n\t{\r\n\t\tlet data = this.getModel().get();\r\n\r\n\t\tfor (let i = 0; i < this._list_watch.length; i++)\r\n\t\t{\r\n\t\t\tfor (let j of args.fields)\r\n\t\t\t{\r\n\t\t\t\tif (!this._list_watch[i]._watch.test(j))\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tthis._list_watch[i].innerHTML = this._list_watch[i]._template(data);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < this._list_visible.length; i++)\r\n\t\t{\r\n\t\t\tif (this._list_visible[i]._visible(data, 'arg'))\r\n\t\t\t\tthis._list_visible[i].style.display = 'block';\r\n\t\t\telse\r\n\t\t\t\tthis._list_visible[i].style.display = 'none';\r\n\t\t}\r\n\r\n\t\tthis.onModelChanged(evt, args);\r\n\t},\r\n\r\n\t/**\r\n\t**\tEvent handler invoked when the model has changed.\r\n\t**\r\n\t**\t>> void onModelChanged (evt, args);\r\n\t*/\r\n\tonModelChanged: function (evt, args)\r\n\t{\r\n\t},\r\n\r\n\t/**\r\n\t**\tEvent handler invoked when a property of the model is changing.\r\n\t**\r\n\t**\t>> void onModelPropertyChanging (evt, args);\r\n\t*/\r\n\tonModelPropertyChanging: function (evt, args)\r\n\t{\r\n\t},\r\n\r\n\t/**\r\n\t**\tEvent handler invoked when a property of the model has changed, executed before onModelPropertyChanged() to update internal\r\n\t**\tdependencies, should not be overriden or elements depending on the property will not be updated.\r\n\t**\r\n\t**\t>> void onModelPropertyPreChanged (evt, args);\r\n\t*/\r\n\tonModelPropertyPreChanged: function (evt, args)\r\n\t{\r\n\t\tfor (let i = 0; i < this._list_property.length; i++)\r\n\t\t{\r\n\t\t\tif (this._list_property[i].name == args.name)\r\n\t\t\t{\r\n\t\t\t\tlet trigger = true;\r\n\r\n\t\t\t\tswitch (this._list_property[i].type)\r\n\t\t\t\t{\r\n\t\t\t\t\tcase 'radio':\r\n\t\t\t\t\t\tif (this._list_property[i].value != args.value)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis._list_property[i].parentElement.classList.remove('active');\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._list_property[i].checked = true;\r\n\t\t\t\t\t\tthis._list_property[i].parentElement.classList.add('active');\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'checkbox':\r\n\t\t\t\t\t\tif (~~args.value)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis._list_property[i].checked = true;\r\n\t\t\t\t\t\t\tthis._list_property[i].parentElement.classList.add('active');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis._list_property[i].checked = false;\r\n\t\t\t\t\t\t\tthis._list_property[i].parentElement.classList.remove('active');\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'field':\r\n\t\t\t\t\t\tthis._list_property[i].setValue (args.value);\r\n\t\t\t\t\t\ttrigger = false;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthis._list_property[i].value = args.value;\r\n\r\n\t\t\t\t\t\tif (this._list_property[i].value != args.value)\r\n\t\t\t\t\t\t\ttrigger = false;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (trigger && this._list_property[i].onchange)\r\n\t\t\t\t\tthis._list_property[i].onchange();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.onModelPropertyChanged(evt, args);\r\n\t},\r\n\r\n\t/**\r\n\t**\tEvent handler invoked when a property of the model has changed. Automatically triggers an\r\n\t**\tinternal event named \"propertyChanged.<propertyName>\".\r\n\t**\r\n\t**\t>> void onModelPropertyChanged (evt, args);\r\n\t*/\r\n\tonModelPropertyChanged: function (evt, args)\r\n\t{\r\n\t\tthis.dispatch ('propertyChanged.' + args.name, args, false);\r\n\t\tthis.dispatch ('propertyChanged', args, false);\r\n\t},\r\n\r\n\t/**\r\n\t**\tEvent handler invoked when a property of the model is removed.\r\n\t**\r\n\t**\t>> void onModelPropertyRemoved (evt, args);\r\n\t*/\r\n\tonModelPropertyRemoved: function (evt, args)\r\n\t{\r\n\t},\r\n\r\n\t/*\r\n\t**\tRuns the following preparation procedures on the specified prototype:\r\n\t**\t\t- All functions named 'event <event-name> [event-selector]' will be moved to the 'events' map.\r\n\t**\r\n\t**\t>> void preparePrototype (object proto);\r\n\t*/\r\n\tpreparePrototype: function (proto)\r\n\t{\r\n\t\tif (proto.__prototypePrepared === true)\r\n\t\t\treturn;\r\n\r\n\t\tproto.__prototypePrepared = true;\r\n\r\n\t\tif (!('events' in proto))\r\n\t\t\tproto.events = { };\r\n\r\n\t\tfor (let i in proto)\r\n\t\t{\r\n\t\t\tif (i.startsWith('event '))\r\n\t\t\t{\r\n\t\t\t\tproto.events[i.substr(6)] = proto[i];\r\n\t\t\t\tdelete proto[i];\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t/*\r\n\t**\tRegisters a new custom element with the specified name, extra functionality can be added with one or more prototypes, by default\r\n\t**\tall elements also get the Element prototype. Note that the final prototypes of all registered elements are stored, and if you want\r\n\t**\tto inherit another element's prototype just provide its name (string) in the protos argument list.\r\n\t**\r\n\t**\t>> class register (string name, (object|string)... protos);\r\n\t*/\r\n\tregister: function (name, ...protos)\r\n\t{\r\n\t\tvar newElement = class extends HTMLElement\r\n\t\t{\r\n\t\t\tconstructor()\r\n\t\t\t{\r\n\t\t\t\tsuper();\r\n\t\t\t\tthis.invokeConstructor = true;\r\n\r\n\t\t\t\tthis._super = { };\r\n\r\n\t\t\t\tfor (let i of Object.entries(this.constructor.prototype._super))\r\n\t\t\t\t{\r\n\t\t\t\t\tthis._super[i[0]] = { };\r\n\r\n\t\t\t\t\tfor (let j of Object.entries(i[1])) {\r\n\t\t\t\t\t\tthis._super[i[0]][j[0]] = j[1].bind(this);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.onCreated();\r\n\t\t\t}\r\n\r\n\t\t\tfindRoot (srcElement)\r\n\t\t\t{\r\n\t\t\t\tlet elem = srcElement ? srcElement : this.parentElement;\r\n\r\n\t\t\t\twhile (elem != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tif ('isRoot' in elem && elem.isRoot)\r\n\t\t\t\t\t\treturn elem;\r\n\r\n\t\t\t\t\telem = elem.parentElement;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tfindCustomParent (srcElement)\r\n\t\t\t{\r\n\t\t\t\tlet elem = srcElement ? srcElement.parentElement : this.parentElement;\r\n\r\n\t\t\t\twhile (elem != null)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (elem.dataset._custom == 'true')\r\n\t\t\t\t\t\treturn elem;\r\n\r\n\t\t\t\t\telem = elem.parentElement;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tconnectReference(root=null, flags=255)\r\n\t\t\t{\r\n\t\t\t\tif (!this.dataset.ref) return;\r\n\r\n\t\t\t\tif (!this.root && (flags & 1) == 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (root == null) root = this.findRoot();\r\n\t\t\t\t\tif (root != null)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\troot[this.dataset.ref] = this;\r\n\t\t\t\t\t\troot.refs[this.dataset.ref] = this;\r\n\r\n\t\t\t\t\t\tdelete this.dataset._pending;\r\n\r\n\t\t\t\t\t\tthis.dataset._linked = 'true';\r\n\t\t\t\t\t\tthis.root = root;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis.dataset._pending = 'true';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.root && (flags & 2) == 2)\r\n\t\t\t\t\tthis.root.onRefAdded (this.dataset.ref);\r\n\t\t\t}\r\n\r\n\t\t\tconnectedCallback()\r\n\t\t\t{\r\n\t\t\t\tthis.connectReference(null, 1);\r\n\r\n\t\t\t\tif (this.invokeConstructor)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.invokeConstructor = false;\r\n\t\t\t\t\tthis.dataset._custom = 'true';\r\n\r\n\t\t\t\t\tthis.__ctor();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.connectReference(null, 2);\r\n\t\t\t\tthis.onConnected();\r\n\r\n\t\t\t\tif (this.dataset.xref)\r\n\t\t\t\t\tglobalThis[this.dataset.xref] = this;\r\n\t\t\t}\r\n\r\n\t\t\tdisconnectedCallback()\r\n\t\t\t{\r\n\t\t\t\tif (this.dataset.ref && this.root)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.root.onRefRemoved (this.dataset.ref);\r\n\r\n\t\t\t\t\tdelete this.dataset._pending;\r\n\r\n\t\t\t\t\tdelete this.root[this.dataset.ref];\r\n\t\t\t\t\tdelete this.root.refs[this.dataset.ref];\r\n\r\n\t\t\t\t\tthis.dataset._linked = 'false';\r\n\t\t\t\t\tthis.root = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.onDisconnected();\r\n\r\n\t\t\t\tif (this.dataset.xref)\r\n\t\t\t\t\tdelete globalThis[this.dataset.xref];\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tRin.override (newElement.prototype, Element);\r\n\r\n\t\tconst proto = { };\r\n\t\tconst _super = { };\r\n\t\tconst events = Rin.clone(Element.events);\r\n\r\n\t\tfor (let i = 0; i < protos.length; i++)\r\n\t\t{\r\n\t\t\tif (!protos[i]) continue;\r\n\r\n\t\t\tif (Rin.typeOf(protos[i]) == 'string')\r\n\t\t\t{\r\n\t\t\t\tconst name = protos[i];\r\n\r\n\t\t\t\tprotos[i] = elementPrototypes[name];\r\n\t\t\t\tif (!protos[i]) continue;\r\n\r\n\t\t\t\t_super[name] = { };\r\n\r\n\t\t\t\tfor (let f in protos[i])\r\n\t\t\t\t{\r\n\t\t\t\t\tif (Rin.typeOf(protos[i][f]) != 'function')\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t_super[name][f] = protos[i][f];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tElement.preparePrototype(protos[i]);\r\n\r\n\t\t\tif ('_super' in protos[i])\r\n\t\t\t\tRin.override (_super, protos[i]._super);\r\n\r\n\t\t\tif ('events' in protos[i])\r\n\t\t\t\tRin.override (events, protos[i].events);\r\n\r\n\t\t\tRin.override (newElement.prototype, protos[i]);\r\n\t\t\tRin.override (proto, protos[i]);\r\n\t\t}\r\n\r\n\t\tnewElement.prototype._super = _super;\r\n\t\tnewElement.prototype.events = events;\r\n\r\n\t\tproto._super = _super;\r\n\t\tproto.events = events;\r\n\r\n\t\tcustomElements.define (name, newElement);\r\n\r\n\t\telementPrototypes[name] = proto;\r\n\t\telementClasses[name] = newElement;\r\n\r\n\t\treturn newElement;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExpands an already created custom element with the specified prototype(s).\r\n\t**\r\n\t**\t>> void expand (string elementName, object... protos);\r\n\t*/\r\n\texpand: function (name, ...protos)\r\n\t{\r\n\t\tif (!(name in elementPrototypes))\r\n\t\t\treturn;\r\n\r\n\t\tconst self = elementPrototypes[name];\r\n\t\tconst elem = elementClasses[name];\r\n\r\n\t\tconst _super = self._super;\r\n\t\tconst events = self.events;\r\n\r\n\t\tfor (let proto of protos)\r\n\t\t{\r\n\t\t\tElement.preparePrototype(proto);\r\n\r\n\t\t\tif ('_super' in proto)\r\n\t\t\t\tRin.override (_super, proto._super);\r\n\r\n\t\t\tif ('events' in proto)\r\n\t\t\t\tRin.override (events, proto.events);\r\n\r\n\t\t\tRin.override (elem.prototype, proto);\r\n\t\t\tRin.override (self, proto);\r\n\t\t}\r\n\r\n\t\telem.prototype._super = _super;\r\n\t\telem.prototype.events = events;\r\n\r\n\t\tself._super = _super;\r\n\t\tself.events = _super;\r\n\t}\r\n};\r\n\r\nElement.register('r-elem', {\r\n});\r\n","/*! https://mths.be/base64 v1.0.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '1.0.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","/*\r\n**\trin/api\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nconst base64 = require('base-64');\r\n\r\nif (!('fetch' in global))\r\n\tglobal.fetch = require('node-fetch');\r\n\r\n/**\r\n**\tAPI interface utility functions.\r\n*/\r\n\r\nmodule.exports =\r\n{\r\n\t/**\r\n\t**\tTarget URL for all the API requests.\r\n\t*/\r\n\tapiUrl: \"/api\",\r\n\r\n\t/**\r\n\t**\tIndicates if all request data will be packed into a req64 parameter instead of individual fields.\r\n\t*/\r\n\tuseReq64: false,\r\n\r\n\t/**\r\n\t**\tNumber of retries to execute each API call before giving up and invoking error handlers.\r\n\t*/\r\n\tretries: 1,\r\n\r\n\t/**\r\n\t**\tLevel of the current request. Used to detect nested requests.\r\n\t*/\r\n\t_requestLevel: 0,\r\n\r\n\t/**\r\n\t**\tIndicates if all API calls should be bundled in a request package. Activated by calling the packageBegin() function and finished with packageEnd().\r\n\t*/\r\n\t_requestPackage: 0,\r\n\r\n\t/**\r\n\t**\tWhen in package-mode, this contains the package data to be sent upon a call to packageEnd().\r\n\t*/\r\n\t_packageData: [],\r\n\r\n\t/**\r\n\t**\tOverridable filter that processes the response from the server and returns true if it was successful.\r\n\t*/\r\n\tresponseFilter: function (res, req)\r\n\t{\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the API functions to package-mode and bundles requests together.\r\n\t*/\r\n\tpackageBegin: function ()\r\n\t{\r\n\t\tthis._requestPackage++;\r\n\t},\r\n\r\n\t/**\r\n\t**\tSends a single API request with the currently constructed package and finishes package-mode.\r\n\t*/\r\n\tpackageEnd: function ()\r\n\t{\r\n\t\tif (!this._requestPackage)\r\n\t\t\treturn;\r\n\r\n\t\tif (--this._requestPackage)\r\n\t\t\treturn;\r\n\r\n\t\tthis.packageSend();\r\n\t},\r\n\r\n\t/**\r\n\t**\tSends a single API request with the currently constructed package and maintains package-mode.\r\n\t*/\r\n\tpackageSend: function ()\r\n\t{\r\n\t\tif (!this._packageData.length)\r\n\t\t\treturn;\r\n\r\n\t\tlet _packageData = this._packageData;\r\n\t\tthis._packageData = [];\r\n\r\n\t\tvar rpkg = \"\";\r\n\r\n\t\tfor (var i = 0; i < _packageData.length; i++)\r\n\t\t{\r\n\t\t\trpkg += \"r\"+i+\",\"+base64.encode(this.encodeParams(_packageData[i][2]))+\";\";\r\n\t\t}\r\n\r\n\t\tthis._showProgress();\r\n\r\n\t\tthis.post(\r\n\t\t\t{ rpkg: rpkg },\r\n\r\n\t\t\t(res, req) =>\r\n\t\t\t{\r\n\t\t\t\tfor (let i = 0; i < _packageData.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\ttry\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tvar response = res[\"r\"+i];\r\n\t\t\t\t\t\tif (!response)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (_packageData[i][1] != null) _packageData[i][1] (_packageData[i][2]);\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (_packageData[i][0] != null)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif (this.responseFilter (response, _packageData[i][2]))\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t_packageData[i][0] (response, _packageData[i][2]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcatch (e) {\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t(req) =>\r\n\t\t\t{\r\n\t\t\t\tfor (let i = 0; i < _packageData.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (_packageData[i][1] != null) _packageData[i][1] (_packageData[i][2]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t},\r\n\r\n\t/**\r\n\t**\tAdds CSS class 'busy' to the HTML root element, works only if running inside a browser.\r\n\t*/\r\n\t_showProgress: function ()\r\n\t{\r\n\t\tif ('document' in global) {\r\n\t\t\tthis._requestLevel++;\r\n\t\t\tif (this._requestLevel > 0) global.document.documentElement.classList.add('busy');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t**\tRemoves the 'busy' CSS class from the HTML element.\r\n\t*/\r\n\t_hideProgress: function ()\r\n\t{\r\n\t\tif ('document' in global) {\r\n\t\t\tthis._requestLevel--;\r\n\t\t\tif (!this._requestLevel) global.document.documentElement.classList.remove('busy');\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t**\tReturns a parameter string for a GET request given an object with fields.\r\n\t*/\r\n\tencodeParams: function (obj)\r\n\t{\r\n\t\tlet s = [];\r\n\r\n\t\tif (obj instanceof FormData)\r\n\t\t{\r\n\t\t\tfor (let i of obj.entries())\r\n\t\t\t\ts.push(encodeURIComponent(i[0]) + '=' + encodeURIComponent(i[1]));\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor (let i in obj)\r\n\t\t\t\ts.push(encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]));\r\n\t\t}\r\n\r\n\t\treturn s.join('&');\r\n\t},\r\n\r\n\t/**\r\n\t**\tExecutes an API call to the URL stored in apiUrl.\r\n\t*/\r\n\tapiCall: function (params, success, failure, type, retries)\r\n\t{\r\n\t\tlet url = this.apiUrl + '?_=' + Date.now();\r\n\r\n\t\tif (type != 'GET' && type != 'POST')\r\n\t\t\ttype = 'auto';\r\n\r\n\t\tif (retries === undefined)\r\n\t\t\tretries = this.retries;\r\n\r\n\t\tif (this._requestPackage)\r\n\t\t{\r\n\t\t\tthis._packageData.push([success, failure, params]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._showProgress();\r\n\r\n\t\tlet data = params;\r\n\r\n\t\tlet options =\r\n\t\t{\r\n\t\t\tcredentials: 'include',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded',\r\n\t\t\t\t'Accept': 'text/html,application/xhtml+xml,application/xml,application/json;q=0.9',\r\n\t\t\t},\r\n\t\t\tmethod: type,\r\n\t\t\tbody: null,\r\n\t\t\tmultipart: false\r\n\t\t};\r\n\r\n\t\tif (!(data instanceof FormData))\r\n\t\t{\r\n\t\t\tdata = new FormData();\r\n\r\n\t\t\tfor (let i in params)\r\n\t\t\t\tdata.append(i, params[i]);\r\n\t\t}\r\n\r\n\t\tfor (let i of data.entries())\r\n\t\t{\r\n\t\t\tif ((i[1] instanceof File) || (i[1] instanceof Blob))\r\n\t\t\t{\r\n\t\t\t\toptions.method = 'POST';\r\n\t\t\t\toptions.headers['Content-Type'] = 'multipart/form-data';\r\n\t\t\t\toptions.multipart = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.useReq64 && !options.multipart)\r\n\t\t{\r\n\t\t\tlet tmp = new FormData();\r\n\t\t\ttmp.append('req64', base64.encode(this.encodeParams(data)));\r\n\t\t\tdata = tmp;\r\n\t\t}\r\n\r\n\t\tif (options.method == 'auto')\r\n\t\t{\r\n\t\t\tlet l = 0;\r\n\r\n\t\t\toptions.method = 'GET';\r\n\r\n\t\t\tfor (let i of data.entries())\r\n\t\t\t{\r\n\t\t\t\tl += i[0].length + i[1].length + 2;\r\n\r\n\t\t\t\tif (l > 960)\r\n\t\t\t\t{\r\n\t\t\t\t\toptions.method = 'POST';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\t\t}\r\n\r\n\t\tif (options.method == 'GET')\r\n\t\t\turl += '&' + this.encodeParams(data);\r\n\r\n\t\tglobal.fetch(url, options)\r\n\t\t.then(result => result.json())\r\n\t\t.then(result =>\r\n\t\t{\r\n\t\t\tthis._hideProgress();\r\n\t\t\tif (!success) return\r\n\r\n\t\t\tif (this.responseFilter(result, params)) {\r\n\t\t\t\ttry { success(result, params); } catch(e) { }\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(err =>\r\n\t\t{\r\n\t\t\tthis._hideProgress();\r\n\r\n\t\t\tif (retries == 0) {\r\n\t\t\t\tif (failure) failure(params);\r\n\t\t\t} else {\r\n\t\t\t\tthis.apiCall (data, success, failure, type, retries-1);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t**\tExecutes a POST API call.\r\n\t*/\r\n\tpost: function (params, success, failure)\r\n\t{\r\n\t\treturn this.apiCall(params, success, failure, 'POST');\r\n\t},\r\n\r\n\t/**\r\n\t**\tExecutes a GET API call.\r\n\t*/\r\n\tget: function (params, success, failure)\r\n\t{\r\n\t\treturn this.apiCall(params, success, failure, 'GET');\r\n\t},\r\n\r\n\t/**\r\n\t**\tExecutes an automatic API call, returns a promise.\r\n\t*/\r\n\tfetch: function (params)\r\n\t{\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis.apiCall(params, resolve, reject);\r\n\t\t});\r\n\t}\r\n};\r\n","/*\n**\trin-front/elems/r-tabs\n**\n**\tCopyright (c) 2019-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/*\n\t<r-tabs [data-container=\"div.tab-container\"] [data-base-route=\"@\"]>\n\t\t<a data-name=\"home\">Home</a>\n\t\t<a data-name=\"users\">Users</a>\n\t\t<a data-name=\"products\">Products</a>\n\t\t<a data-name=\"account\">Account</a>\n\t</r-tabs>\n\n\t<div class=\"tab-container\">\n\t\t<div data-name=\"home\">\n\t\t\tHome\n\t\t</div>\n\n\t\t<div data-name=\"users\">\n\t\t\tUsers\n\t\t</div>\n\t</div>\n*/\n\nlet Element = require('../element');\nlet Router = require('../router');\n\nElement.register ('r-tabs',\n{\n\t/**\n\t**\tElement events.\n\t*/\n\tevents:\n\t{\n\t\t'click [data-name]': function (evt)\n\t\t{\n\t\t\tevt.continuePropagation = true;\n\n\t\t\tif (this.dataset.baseRoute)\n\t\t\t{\n\t\t\t\twindow.location = \"#\" + this.dataset.baseRoute.replace('@', evt.source.dataset.name);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.selectTab (evt.source.dataset.name);\n\t\t}\n\t},\n\n\t/**\n\t**\tInitializes the Tabs element.\n\t*/\n\tinit: function()\n\t{\n\t\tthis.className.add('tabs');\n\n\t\tthis._routeHandler = (evt, args) =>\n\t\t{\n\t\t\tif (!args.route.changed)\n\t\t\t\treturn;\n\n\t\t\tthis._showTab (args.tabName);\n\t\t};\n\t},\n\n\t/**\n\t**\tExecuted when the children of the element are ready.\n\t*/\n\tready: function()\n\t{\n\t\tif (\"container\" in this.dataset)\n\t\t\tthis.container = document.querySelector(this.dataset.container);\n\t\telse\n\t\t\tthis.container = this.nextElementSibling;\n\n\t\tthis._hideTabsExcept(null);\n\t},\n\n\t/**\n\t**\tAdds a handler to Router if the data-base-route attribute was set.\n\t*/\n\tonConnected: function()\n\t{\n\t\tif (this.dataset.baseRoute)\n\t\t\tRouter.addRoute (this.dataset.baseRoute.replace('@', ':tabName'), this._routeHandler);\n\t},\n\n\t/**\n\t**\tRemoves a handler previously added to Router if the data-base-route attribute was set.\n\t*/\n\tonDisconnected: function()\n\t{\n\t\tif (this.dataset.baseRoute)\n\t\t\tRouter.removeRoute(this.dataset.baseRoute.replace('@', ':tabName'), this._routeHandler);\n\t},\n\n\t/**\n\t**\tHides all tabs except the one with the specified exceptName, if none specified then all tabs will be hidden (adds .hidden CSS class),\n\t**\tadditionally the respective link item in the tab definition will have class 'active'.\n\t*/\n\t_hideTabsExcept: function (exceptName)\n\t{\n\t\tif (this.container == null) return;\n\n\t\tif (!exceptName) exceptName = '';\n\n\t\tfor (let i = 0; i < this.container.children.length; i++)\n\t\t{\n\t\t\tif (this.container.children[i].dataset.name == exceptName)\n\t\t\t{\n\t\t\t\tif (this.container.children[i].classList.contains('hidden'))\n\t\t\t\t\tthis.dispatch('tab-activate', { name: this.container.children[i].dataset.name, el: this.container.children[i] });\n\n\t\t\t\tthis.container.children[i].classList.remove('hidden');\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (!this.container.children[i].classList.contains('hidden'))\n\t\t\t\t\tthis.dispatch('tab-deactivate', { name: this.container.children[i].dataset.name, el: this.container.children[i] });\n\n\t\t\t\tthis.container.children[i].classList.add('hidden');\n\t\t\t}\n\t\t}\n\n\t\tlet links = this.querySelectorAll(\"[data-name]\");\n\n\t\tfor (let i = 0; i < links.length; i++)\n\t\t{\n\t\t\tif (links[i].dataset.name == exceptName)\n\t\t\t\tlinks[i].classList.add('active');\n\t\t\telse\n\t\t\t\tlinks[i].classList.remove('active');\n\t\t}\n\t},\n\n\t/**\n\t**\tShows the tab with the specified name.\n\t*/\n\t_showTab: function (name)\n\t{\n\t\treturn this._hideTabsExcept (name);\n\t},\n\n\t/**\n\t**\tSelects a tab given its name.\n\t*/\n\tselectTab: function (name)\n\t{\n\t\tif (this.dataset.baseRoute)\n\t\t{\n\t\t\tconst hash = \"#\" + this.dataset.baseRoute.replace('@', name);\n\n\t\t\tif (window.location.hash != hash)\n\t\t\t{\n\t\t\t\twindow.location = hash;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis._showTab (name);\n\t}\n});\n","/*\n**\trin-front/elems/r-form\n**\n**\tCopyright (c) 2019-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/*\n\t<r-form data-form-action=\"api-function-name\" [data-strict=\"true|false\"]>\n\t\t<input type=\"text\" data-field=\"username\"/>\n\t</r-form>\n\n\t.form .message.hidden {\n\t\tdisplay: none !important;\n\t}\n*/\n\nconst { Rin } = require('@rsthn/rin');\n\nconst Element = require('../element');\nconst Api = require('../api');\n\nElement.register ('r-form',\n{\n\t/**\n\t**\tElement events.\n\t*/\n\tevents:\n\t{\n\t\t'change [data-field]': '_fieldChanged',\n\n\t\t'click input[type=reset]': 'reset',\n\t\t'click .reset': 'reset',\n\n\t\t'click input[type=submit]': 'submit',\n\t\t'click button[type=submit]': 'submit',\n\t\t'click .submit': 'submit',\n\t\t'submit form': 'submit'\n\t},\n\n\t/**\n\t**\tInitializes the form element.\n\t*/\n\tinit: function()\n\t{\n\t\tthis.classList.add('form');\n\n\t\tthis.setModel({ });\n\t},\n\n\t/**\n\t**\tExecuted when the children of the element are ready.\n\t*/\n\tready: function()\n\t{\n\t\tlet def = { };\n\n\t\tthis.querySelectorAll(\"[data-field]\").forEach((i) =>\n\t\t{\n\t\t\ti.name = i.dataset.field;\n\n\t\t\tlet val = i.dataset.default;\n\t\t\tif (val == undefined)\n\t\t\t{\n\t\t\t\tswitch (i.type)\n\t\t\t\t{\n\t\t\t\t\tcase 'checkbox':\n\t\t\t\t\t\tval = i.checked ? '1' : '0';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'file':\n\t\t\t\t\t\tval = '';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tval = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (def[i.dataset.field] && (!val || (i.type == 'checkbox' && val == '0')))\n\t\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdef[i.dataset.field] = val;\n\t\t});\n\n\t\tthis.model.defaults = def;\n\t\tthis.model.reset();\n\n\t\tthis._clearMarkers();\n\t},\n\n\t/*\n\t**\tTransforms an string returned by the server to a local representation.\n\t*/\n\tfilterString: function (str, r)\n\t{\n\t\treturn str;\n\t},\n\n\t_change: function(elem)\n\t{\n\t\tif ('createEvent' in document)\n\t\t{\n\t\t\tlet evt = document.createEvent('HTMLEvents');\n\t\t\tevt.initEvent('change', false, true);\n\t\t\telem.dispatchEvent(evt);\n\t\t}\n\t\telse\n\t\t\telem.fireEvent('onchange');\n\t},\n\n\t_setField: function (f, value, silent)\n\t{\n\t\tif (!f) return;\n\n\t\tif (typeof(f) == 'string')\n\t\t{\n\t\t\tf = this.querySelector('[data-field=\"'+f+'\"]');\n\t\t\tif (!f) return;\n\t\t}\n\n\t\tswitch (f.type || f.tagName.toLowerCase())\n\t\t{\n\t\t\tcase 'select':\n\t\t\t\tf.dataset.value = f.multiple ? (value ? value.split(',') : value) : value;\n\t\t\t\tf.value = f.dataset.value;\n\n\t\t\t\tif (silent !== true) this._change(f);\n\t\t\t\tbreak;\n\n\t\t\tcase 'checkbox':\n\t\t\t\tf.checked = parseInt(value) ? true : false;\n\t\t\t\tbreak;\n\n\t\t\tcase 'file':\n\t\t\t\tif ((value instanceof File) || (value instanceof Blob))\n\t\t\t\t{\n\t\t\t\t\tf.dataset.value = value;\n\t\t\t\t}\n\t\t\t\telse if (value instanceof FileList)\n\t\t\t\t{\n\t\t\t\t\tf.dataset.value = value;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tf.dataset.value = '';\n\t\t\t\t\tf.value = '';\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tf.dataset.value = value;\n\t\t\t\tf.value = value;\n\n\t\t\t\tif (silent !== true) this._change(f);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\n\t_getField: function (f)\n\t{\n\t\tlet value = f.value == null ? f.dataset.value : f.value;\n\n\t\tswitch (f.type || f.tagName.toLowerCase())\n\t\t{\n\t\t\tcase 'select':\n\t\t\t\tvalue = f.multiple ? (value ? value.join(',') : value) : value;\n\t\t\t\tbreak;\n\n\t\t\tcase 'checkbox':\n\t\t\t\tvalue = f.checked ? '1' : '0';\n\t\t\t\tbreak;\n\n\t\t\tcase 'file':\n\t\t\t\tvalue = f.files && f.files.length ? (f.multiple ? f.files : f.files[0]) : null;\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\t_clearMarkers: function ()\n\t{\n\t\tthis.classList.remove('busy');\n\n\t\tthis.querySelectorAll('.message, .loading-indicator').forEach(i => i.classList.add('hidden') );\n\t\tthis.querySelectorAll('span.field-error').forEach(i => i.remove());\n\n\t\tthis.querySelectorAll('.field-error').forEach(i => { i.classList.remove('field-error'); i.classList.remove('is-invalid'); });\n\t\tthis.querySelectorAll('.field-passed').forEach(i => i.classList.remove('field-passed'));\n\t},\n\n\t_fieldChanged: function (evt)\n\t{\n\t\tlet f = evt.source;\n\n\t\tif (f.type == 'file')\n\t\t\tthis.model.set (f.dataset.field, this._getField(f), true);\n\t\telse\n\t\t\tthis.model.set (f.dataset.field, this._getField(f));\n\n\t\tevt.continuePropagation = true;\n\t},\n\n\t_onSuccess: function(r)\n\t{\n\t\tthis.classList.remove('busy');\n\n\t\tlet tmp = this.querySelector('.loading-indicator');\n\t\tif (tmp) tmp.classList.add('hidden');\n\n\t\tthis.dispatch ('formSuccess', r);\n\n\t\tif (r.message && (tmp = this.querySelector('.message.success')) != null)\n\t\t{\n\t\t\ttmp.innerHTML = this.filterString(r.message, r);\n\t\t\ttmp.classList.remove('hidden');\n\t\t}\n\t},\n\n\t_onFailure: function(r)\n\t{\n\t\tthis.classList.remove('busy');\n\n\t\tlet tmp = this.querySelector('.loading-indicator');\n\t\tif (tmp) tmp.classList.add('hidden');\n\n\t\tthis.dispatch ('formError', r);\n\n\t\tif (r.fields)\n\t\t{\n\t\t\tfor (let i in r.fields)\n\t\t\t{\n\t\t\t\ttmp = document.createElement('span');\n\t\t\t\ttmp.classList.add('field-error');\n\t\t\t\ttmp.innerHTML = this.filterString(r.fields[i], r);\n\n\t\t\t\tlet f = this.querySelector('[data-field-container=\"'+i+'\"]');\n\t\t\t\tif (!f) f = this.querySelector('[data-field=\"'+i+'\"]');\n\t\t\t\tf.classList.add('field-error');\n\t\t\t\tf.classList.add('is-invalid');\n\n\t\t\t\tf.parentElement.insertBefore(tmp, f.nextElementSibling);\n\n\t\t\t\tsetTimeout((function (tmp) { return function() { tmp.classList.add('active'); } })(tmp), 25);\n\t\t\t}\n\n\t\t\tif (r.error && (tmp = this.querySelector('.message.error')) != null)\n\t\t\t{\n\t\t\t\ttmp.innerHTML = this.filterString(r.error, r);\n\t\t\t\ttmp.classList.remove('hidden');\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif ((tmp = this.querySelector('.message.error')) != null)\n\t\t\t{\n\t\t\t\ttmp.innerHTML = this.filterString(r.error, r) || ('Error: ' + r.response);\n\t\t\t\ttmp.classList.remove('hidden');\n\t\t\t}\n\t\t}\n\t},\n\n\tonModelPropertyChanged: function (evt, args)\n\t{\n\t\tthis._setField (args.name, args.value);\n\t},\n\n\treset: function (nsilent)\n\t{\n\t\tthis.model.reset (nsilent);\n\t\tthis._clearMarkers();\n\n\t\tif (nsilent === false)\n\t\t{\n\t\t\tfor (var i in this.model.data)\n\t\t\t\tthis._setField (i, this.model.data[i], true);\n\t\t}\n\n\t\treturn false;\n\t},\n\n\tsubmit: function ()\n\t{\n\t\tif (this.classList.contains('busy'))\n\t\t\treturn;\n\n\t\tlet data = this.model.get(this.dataset.strict == 'false' ? false : true);\n\n\t\tlet f = this.dataset.formAction;\n\t\tif (!f) return;\n\n\t\tthis._clearMarkers();\n\n\t\tthis.classList.add('busy');\n\n\t\tlet tmp = this.querySelector('.loading-indicator');\n\t\tif (tmp) tmp.classList.remove('hidden');\n\n\t\tif (typeof(f) != 'function')\n\t\t{\n\t\t\tdata.f = f;\n\t\t\tApi.apiCall(data, (r) => this[r.response == 200 ? '_onSuccess' : '_onFailure'](r), (r) => this._onFailure({ error: 'Unable to execute request.' }));\n\t\t}\n\t\telse\n\t\t\tf(data, (r) => this[r.response == 200 ? '_onSuccess' : '_onFailure'](r));\n\t}\n});\n","/*\n**\trin-front/elems/r-panel\n**\n**\tCopyright (c) 2019-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/*\n\t<r-panel data-route=\"name\">\n\t</r-panel>\n\n\t.panel:not(.active) {\n\t\tdisplay: none !important;\n\t}\n\n*/\n\nlet Element = require('../element');\nlet Router = require('../router');\n\nElement.register ('r-panel',\n{\n\t/**\n\t**\tElement events.\n\t*/\n\tevents:\n\t{\n\t},\n\n\t/**\n\t**\tInitializes the element.\n\t*/\n\tinit: function()\n\t{\n\t\tthis.classList.add('panel');\n\n\t\t// Executed then the panel route is activated.\n\t\tthis._onActivate = (evt, args) =>\n\t\t{\n\t\t\tif (!args.route.changed)\n\t\t\t\treturn;\n\n\t\t\tthis.show(true);\n\t\t};\n\n\t\t// Executed then the panel route is deactivated.\n\t\tthis._onDeactivate = (evt, args) =>\n\t\t{\n\t\t\tthis.hide();\n\t\t};\n\n\t\tthis.hide();\n\t},\n\n\t/**\n\t**\tExecuted when the children of the element are ready.\n\t*/\n\tready: function()\n\t{\n\t},\n\n\t/**\n\t**\tAdds a handler to Router if the data-route attribute was set.\n\t*/\n\tonConnected: function()\n\t{\n\t\tif (this.dataset.route)\n\t\t\tRouter.addRoute (this.dataset.route, this._onActivate, this._onDeactivate);\n\t},\n\n\t/**\n\t**\tRemoves a handler previously added to Router if the data-route attribute was set.\n\t*/\n\tonDisconnected: function()\n\t{\n\t\tif (this.dataset.route)\n\t\t\tRouter.removeRoute(this.dataset.route, this._onActivate, this._onDeactivate);\n\t},\n\n\t/**\n\t**\tHides the panel.\n\t*/\n\thide: function ()\n\t{\n\t\tthis.classList.remove('active');\n\t\tthis.dispatch('panelHidden', { });\n\t},\n\n\t/**\n\t**\tMakes the panel visible.\n\t*/\n\tshow: function (noHashChange=false)\n\t{\n\t\tif (this.dataset.route && !noHashChange)\n\t\t{\n\t\t\tlet hash = \"#\" + this.dataset.route;\n\n\t\t\tif (window.location.hash.substr(0, hash.length) != hash)\n\t\t\t{\n\t\t\t\twindow.location = hash;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.classList.add('active');\n\t\tthis.dispatch('panelShown', { });\n\t}\n});\n","/*\r\n**\trin-front/elements\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nmodule.exports =\r\n{\r\n\tTabs: require('./elems/r-tabs'),\r\n\tForm: require('./elems/r-form'),\r\n\tPanel: require('./elems/r-panel')\r\n};\r\n","/*\r\n**\trin-front/main\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nmodule.exports =\r\n{\r\n\tRouter: require('./router'),\r\n\tElement: require('./element'),\r\n\tApi: require('./api'),\r\n\r\n\tElements: require('./elements')\r\n};\r\n"]}